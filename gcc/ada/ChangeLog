2012-04-20  Jan Hubicka  <jh@suse.cz>

	* gcc-interface/utils.c (gnat_write_global_declarations): Update for new
	force_output placement.

2012-04-14  Jan Hubicka  <jh@suse.cz>

	* gcc-interface/trans.c (finalize_nrv): Update field referenced for new
	cgraph/varpool layout.

2012-04-09  Mike Stump  <mikestump@comcast.net>

	* a-assert.ads: Remove execute permission.
	* a-chacon.ads: Likewise.
	* a-coteio.ads: Likewise.
	* a-envvar.ads: Likewise.
	* a-exetim-mingw.ads: Likewise.
	* a-fzteio.ads: Likewise.
	* a-izteio.ads: Likewise.
	* a-lcteio.ads: Likewise.
	* a-llctio.ads: Likewise.
	* a-scteio.ads: Likewise.
	* a-suenco.ads: Likewise.
	* a-suenst.ads: Likewise.
	* a-suewst.ads: Likewise.
	* a-suezst.ads: Likewise.
	* a-tirsfi.ads: Likewise.
	* a-wichha.ads: Likewise.
	* a-zchara.ads: Likewise.
	* a-zchhan.ads: Likewise.
	* a-zchuni.ads: Likewise.
	* a-zrstfi.ads: Likewise.
	* aspects.ads: Likewise.
	* g-byorma.ads: Likewise.
	* g-decstr.ads: Likewise.
	* g-encstr.ads: Likewise.
	* g-spchge.ads: Likewise.
	* g-u3spch.ads: Likewise.
	* g-wispch.ads: Likewise.
	* g-zspche.ads: Likewise.
	* namet-sp.ads: Likewise.
	* s-os_lib.ads: Likewise.
	* s-regexp.ads: Likewise.
	* s-regpat.ads: Likewise.
	* s-string.ads: Likewise.
	* s-tasloc.ads: Likewise.
	* s-utf_32.ads: Likewise.
	* sem_aux.ads: Likewise.
	* a-assert.adb: Likewise.
	* a-chacon.adb: Likewise.
	* a-envvar.adb: Likewise.
	* a-exetim-mingw.adb: Likewise.
	* a-suenco.adb: Likewise.
	* a-suenst.adb: Likewise.
	* a-suewst.adb: Likewise.
	* a-suezst.adb: Likewise.
	* a-tirsfi.adb: Likewise.
	* a-wichha.adb: Likewise.
	* a-zchhan.adb: Likewise.
	* a-zchuni.adb: Likewise.
	* a-zrstfi.adb: Likewise.
	* aspects.adb: Likewise.
	* g-byorma.adb: Likewise.
	* g-decstr.adb: Likewise.
	* g-encstr.adb: Likewise.
	* g-spchge.adb: Likewise.
	* g-u3spch.adb: Likewise.
	* g-wispch.adb: Likewise.
	* g-zspche.adb: Likewise.
	* namet-sp.adb: Likewise.
	* s-except.adb: Likewise.
	* s-inmaop-vxworks.adb: Likewise.
	* s-os_lib.adb: Likewise.
	* s-regexp.adb: Likewise.
	* s-regpat.adb: Likewise.
	* s-string.adb: Likewise.
	* s-tasloc.adb: Likewise.
	* s-utf_32.adb: Likewise.
	* s-wchcon.adb: Likewise.
	* sem_aux.adb: Likewise.

2012-04-02  Robert Dewar  <dewar@adacore.com>

	* s-atopri.ads: Minor reformatting.

2012-04-02  Thomas Quinot  <quinot@adacore.com>

	* sem_util.adb: Minor reformatting, minor code cleanup.

2012-04-02  Ed Schonberg  <schonberg@adacore.com>

	* lib-xref.adb (Generate_Reference): For a reference to an
	operator symbol, set the sloc to point to the first character
	of the operator name, and not to the initial quaote.
	(Output_References): Ditto for the definition of an operator
	symbol.

2012-04-02  Vincent Celier  <celier@adacore.com>

	* ali.adb (Scan_Ali): Recognize Z lines. Set
	Implicit_With_From_Instantiation to True in the With_Record for
	Z lines.
	* ali.ads (With_Record): New Boolean component
	Implicit_With_From_Instantiation, defaulted to False.
	* csinfo.adb: Indicate that Implicit_With_From_Instantiation
	is special
	* lib-writ.adb (Write_ALI): New array Implicit_With.
	(Collect_Withs): Set Implicit_With for the unit is it is not Yes.
	(Write_With_Lines): Write a Z line instead of a W line if
	Implicit_With is Yes for the unit.
	* sem_ch12.adb (Inherit_Context): Only add a unit in the context
	if it is not there yet.
	* sinfo.ads: New flag Implicit_With_From_Instantiation (Flag12)
	added.

2012-04-02  Yannick Moy  <moy@adacore.com>

	* osint.adb, osint.ads (Add_Default_Search_Dirs): Add library
	search dirs in file specified with option -gnateO.

2012-04-02  Robert Dewar  <dewar@adacore.com>

	* sem_ch5.adb, exp_util.adb, sem_util.adb, exp_ch4.adb: Minor
	reformatting.

2012-04-02  Olivier Hainque  <hainque@adacore.com>

	* g-sse.ads: Add x86-solaris and x86_64-darwin to the set of
	platforms where the use of this spec is supported. Add current
	year to the copyright notice.
	* gcc-interfaces/Makefile.in: Add g-sse.o and g-ssvety.o to
	EXTRA_GNATRTL_NONTASKING_OBJS on x86 32/64 targets that support
	it and where they were missing (x86-solaris, x86-freebsd,
	x86_64-freebsd, and x86-darwin).

2012-04-02  Gary Dismukes  <dismukes@adacore.com>

	* bindgen.adb (Gen_Ada_Init): When compiling for the AAMP small
	library, where we no longer suppress the Standard_Library,
	generate an empty body rather than the usual generation of
	assignments to imported globals, since those aren't present in
	the small library.

2012-04-02  Ed Schonberg  <schonberg@adacore.com>

	* sinfo.ads: Minor documentation fix.

2012-04-02  Hristian Kirtchev  <kirtchev@adacore.com>

	* sem_res.adb (Resolve_Conditional_Expression): Add local variables
	Else_Typ and Then_Typ. Add missing type conversions to the "then" and
	"else" expressions when their respective types are scalar.

2012-04-02  Vincent Pucci  <pucci@adacore.com>

	* exp_ch9.adb: Reordering of the local subprograms. New Table
	for the lock free implementation that maps each protected
	subprograms with the protected component it references.
	(Allow_Lock_Free_Implementation): New routine. Check if
	the protected body enables the lock free implementation.
	(Build_Lock_Free_Protected_Subprogram_Body): New routine.
	(Build_Lock_Free_Unprotected_Subprogram_Body): New routine.
	(Comp_Of): New routine.
	* Makefile.rtl: Add s-atopri.o
	* debug.adb: New compiler debug flag -gnatd9 for lock free
	implementation.
	* rtsfind.ads: RE_Atomic_Compare_Exchange_8,
	RE_Atomic_Compare_Exchange_16, RE_Atomic_Compare_Exchange_32,
	RE_Atomic_Compare_Exchange_64, RE_Atomic_Load_8,
	RE_Atomic_Load_16, RE_Atomic_Load_32, RE_Atomic_Load_64, RE_Uint8,
	RE_Uint16, RE_Uint32, RE_Uint64 added.
	* s-atropi.ads: New file. Defines atomic primitives used
	by the lock free implementation.

2012-04-02  Emmanuel Briot  <briot@adacore.com>

	* g-expect.adb (Expect_Internal): Fix leak of the input file descriptor.

2012-04-02  Hristian Kirtchev  <kirtchev@adacore.com>

	* exp_ch4.adb (Expand_N_Quantified_Expression): Reimplemented.
	The expansion no longer uses the copy of the original QE created
	during analysis.
	* sem.adb (Analyze): Add processing for loop parameter specifications.
	* sem_ch4.adb (Analyze_Quantified_Expression): Reimplemented. The
	routine no longer creates a copy of the original QE. All
	constituents of a QE are now preanalyzed and resolved.
	* sem_ch5.adb (Analyze_Iteration_Scheme): Remove the guard which
	bypasses all processing when the iteration scheme is related to a
	QE. Relovate the code which analyzes loop parameter specifications
	to a separate routine.	(Analyze_Iterator_Specification):
	Preanalyze the iterator name. This action was originally
	done in Analyze_Iteration_Scheme. Update the check which
	detects an iterator specification in the context of a QE.
	(Analyze_Loop_Parameter_Specification): New routine. This
	procedure allows for a stand-alone analysis of a loop parameter
	specification without the need of a parent iteration scheme. Add
	code to update the type of the loop variable when the range
	generates an itype and the context is a QE.
	(Pre_Analyze_Range): Renamed to Preanalyze_Range. Update all references
	to the routine.
	* sem_ch5.ads: Code reformatting.
	(Analyze_Loop_Parameter_Specification): New routine.
	* sem_ch6.adb (Fully_Conformant_Expressions): Detect a case
	when establishing conformance between two QEs utilizing different
	specifications.
	* sem_res.adb (Proper_Current_Scope): New routine.
	(Resolve): Do not resolve a QE as there is nothing to be done now.
	Ignore any loop scopes generated for QEs when detecting an expression
	function as the scopes are cosmetic and do not appear in the tree.
	(Resolve_Quantified_Expression): Removed. All resolution of
	QE constituents is now performed during analysis. This ensures
	that loop variables appearing in array aggregates are properly
	resolved.

2012-04-02  Ed Schonberg  <schonberg@adacore.com>

	* sem_util.adb (Build_Default_Subtype): If the base type is
	private and its full view is available, use the full view in
	the subtype declaration.

2012-04-02  Jose Ruiz  <ruiz@adacore.com>

	* gnat_ugn.texi: Add some minimal documentation about how to
	use GNATtest for cross platforms.

2012-04-02  Vincent Celier  <celier@adacore.com>

	* opt.ads (Object_Path_File_Name): New variable.
	* prj-attr.adb: New Compiler attribute Object_Path_Switches.
	* prj-nmsc.adb (Process_Compiler): Recognize new attribute
	Object_Path_Switches.
	* snames.ads-tmpl: New standard name Object_Path_Switches.
	* switch-c.adb (Scan_Front_End_Switches): Recognize new switch
	-gnateO= and put its value in Opt.Object_Path_File_Name.

2012-04-02  Hristian Kirtchev  <kirtchev@adacore.com>

	* exp_ch7.adb (Process_Declarations): Detect a case where
	a source object was initialized by another source object,
	but the expression was rewritten as a class-wide conversion
	of Ada.Tags.Displace.
	* exp_util.adb (Initialized_By_Ctrl_Function): Removed.
	(Is_Controlled_Function_Call): New routine.
	(Is_Displacement_Of_Ctrl_Function_Result): Removed.
	(Is_Displacement_Of_Object_Or_Function_Result): New routine.
	(Is_Source_Object): New routine.
	(Requires_Cleanup_Actions): Detect a case where a source object was
	initialized by another source object, but the expression was rewritten
	as a class-wide conversion of Ada.Tags.Displace.
	* exp_util.ads (Is_Displacement_Of_Ctrl_Function_Result): Removed.
	(Is_Displacement_Of_Object_Or_Function_Result): New routine.

2012-04-02  Ed Schonberg  <schonberg@adacore.com>

	* sem_res.adb (Resolve_Call): A call to an expression function
	does not freeze if it appears in a different scope from the
	expression function itself. Such calls appear in the generated
	bodies of other expression functions, or in pre/postconditions
	of subsequent subprograms.

2012-04-02  Yannick Moy  <moy@adacore.com>

	* lib-xref-alfa.adb: Code clean up.

2012-04-02  Ed Schonberg  <schonberg@adacore.com>

	* sem_ch12.adb (Analyze_Subprogram_Instantiation): Do not suppress
	style checks, because the subprogram instance itself may contain
	violations of syle rules.
	* style.adb (Missing_Overriding): Check for missing overriding
	indicator on a subprogram instance.

2012-04-02  Hristian Kirtchev  <kirtchev@adacore.com>

	* sem_ch6.adb (Last_Implicit_Declaration): New routine.
	(Process_PPCs): Insert the body of _postconditions after the
	last internally generated declaration. This ensures that actual
	subtypes created for formal parameters are visible and properly
	frozen as _postconditions may reference them.

2012-04-02  Robert Dewar  <dewar@adacore.com>

	* einfo.adb (First_Component_Or_Discriminant) Now applies to
	all types with discriminants, not just records.
	* exp_attr.adb (Expand_N_Attribute): Add Scalar_Values handling
	for arrays, scalars and non-variant records.
	* sem_attr.adb (Analyze_Attribute): Handle Valid_Scalars
	* sem_attr.ads (Valid_Scalars): Update description
	* sem_util.ads, sem_util.adb (No_Scalar_Parts): New function.

2012-03-31  Eric Botcazou  <ebotcazou@adacore.com>

	Revert
	2012-03-25  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc-interface/decl.c (SS_MARK_NAME): New define.
	(gnat_to_gnu_entity) <E_Function>: Prepend leaf attribute on entities
	whose name is SS_MARK_NAME.

2012-03-30  Robert Dewar  <dewar@adacore.com>

	* exp_ch5.adb, sem_util.adb, exp_ch4.adb: Minor comment updates.

2012-03-30  Yannick Moy  <moy@adacore.com>

	* lib-xref-alfa.adb (Add_Alfa_File): Treat possibly 2 units at the same
	time, putting all scopes in the same Alfa file.
	(Add_Alfa_Xrefs): Correct errors in comparison function. Correct value
	of Def component.
	(Collect_Alfa): Possibly pass 2 units to Add_Alfa_File.

2012-03-30  Hristian Kirtchev  <kirtchev@adacore.com>

	* exp_util.adb (Is_Secondary_Stack_BIP_Func_Call): Handle a case where
	a build-in-place call appears as Prefix'Reference'Reference.

2012-03-30  Yannick Moy  <moy@adacore.com>

	* lib-xref-alfa.adb: Minor refactoring to remove internal package.

2012-03-30  Hristian Kirtchev  <kirtchev@adacore.com>

	* sem_ch5.adb (Analyze_Iteration_Scheme): Preanalyze the subtype
	definition of a loop when the context is a quantified expression.

2012-03-30  Vincent Celier  <celier@adacore.com>

	* prj.ads: Minor comment update.

2012-03-30  Yannick Moy  <moy@adacore.com>

	* lib-xref-alfa.adb, alloc.ads, lib-xref.ads: Minor addition of
	comments and refactoring.

2012-03-30  Robert Dewar  <dewar@adacore.com>

	* lib-xref.adb, lib-xref-alfa.adb: Minor reformatting & code
	reorganization.

2012-03-30  Yannick Moy  <moy@adacore.com>

	* lib-xref-alfa.adb (Generate_Dereference): Use Get_Code_Unit
	instead of Get_Source_Unit to get file for reference.
	(Traverse_Compilation_Unit): Do not add scopes for generic units.
	* lib-xref.adb (Generate_Reference): Use Get_Code_Unit instead
	of Get_Source_Unit to get file for reference.
	* sem_ch12.adb (Analyze_Package_Instantiation): Enable
	instantiation in Alfa mode.

2012-03-30  Hristian Kirtchev  <kirtchev@adacore.com>

	* exp_ch7.adb (Process_Declarations): Replace
	the call to Is_Null_Access_BIP_Func_Call with
	Is_Secondary_Stack_BIP_Func_Call. Update the related comment.
	* exp_util.adb (Is_Null_Access_BIP_Func_Call): Removed.
	(Is_Secondary_Stack_BIP_Func_Call): New routine.
	(Requires_Cleanup_Actions): Replace
	the call to Is_Null_Access_BIP_Func_Call with
	Is_Secondary_Stack_BIP_Func_Call. Update the related comment.
	* exp_util.ads (Is_Null_Access_BIP_Func_Call): Removed.
	(Is_Secondary_Stack_BIP_Func_Call): New routine.

2012-03-30  Yannick Moy  <moy@adacore.com>

	* lib-xref-alfa.adb, lib-xref.adb: Code clean ups.

2012-03-30  Gary Dismukes  <dismukes@adacore.com>

	* exp_ch5.adb (Expand_Iterator_Loop_Over_Array): For the case of a
	loop entity which is rewritten as a renaming
	of the indexed array, explicitly mark the entity as needing
	debug info so that Materialize entity will be set later by
	Debug_Renaming_Declaration when the renaming is expanded.

2012-03-30  Robert Dewar  <dewar@adacore.com>

	* sem_attr.ads: Update comment.

2012-03-30  Vincent Celier  <celier@adacore.com>

	* prj.ads: New Dependency_Kind: ALI_Closure.

2012-03-30  Thomas Quinot  <quinot@adacore.com>

	* exp_pakd.adb: Minor reformatting.

2012-03-30  Yannick Moy  <moy@adacore.com>

	* lib-xref-alfa.adb (Add_Alfa_File): Take into account possible absence
	of compilation unit for unit in Sdep_Table.

2012-03-30  Thomas Quinot  <quinot@adacore.com>

	* freeze.adb (Freeze_Record_Type): For a type with reversed bit
	order and reversed storage order, disable front-end relayout.

2012-03-25  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Record_Subtype>: Copy
	the TYPE_PACKED flag from the base type.

2012-03-25  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc-interface/decl.c (SS_MARK_NAME): New define.
	(gnat_to_gnu_entity) <E_Function>: Prepend leaf attribute on entities
	whose name is SS_MARK_NAME.

2012-03-25  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc-interface/utils.c (add_parallel_type): Take a TYPE instead of a
	DECL and adjust.  Move around.
	(has_parallel_type): New predicate.
	(rest_of_record_type_compilation): Return early if the type already
	has a parallel type.
	* gcc-interface/gigi.h (add_parallel_type): Adjust.
	* gcc-interface/decl.c (gnat_to_gnu_entity): Adjust for above changes.

2012-03-25  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc-interface/utils.c (finish_record_type): Return early for padded
	types and tidy up.

2012-03-20  Arnaud Charlet  <charlet@adacore.com>

	* hlo.ads, hlo.adb: Removed, no longer used.
	* gcc-interface/Make-lang.in: Remove hlo.o. Update dependencies.
	* gcc-interface/Makefile.in: Remove EXTRA_LIBGNAT_SRCS (temporarly)
	and compute it from EXTRA_LIBGNAT_OBJS.
	Clean up comments, reorder LIBGNAT_SRCS and LIBGNAT_OBJS.

2012-03-20  Yannick Moy  <moy@adacore.com>

	* gnat_rm.texi, sem_attr.ads: Update documentation.

2012-03-19  Yannick Moy  <moy@adacore.com>

	* sem_ch6.adb: Minor code clean up.

2012-03-19  Vincent Celier  <celier@adacore.com>

	* make.adb (Scan_Make_Arg): Make sure all significant -m switches
	on the command line are counted.

2012-03-19  Robert Dewar  <dewar@adacore.com>

	* sem_elab.adb (Generate_Elab_Warnings): Fix spec, fix attribute
	reference case

2012-03-19  Robert Dewar  <dewar@adacore.com>

	* par-ch4.adb (Check_Bad_Exp): New procedure

2012-03-19  Robert Dewar  <dewar@adacore.com>

	* exp_attr.adb, sem_attr.adb, sem_attr.ads, snames.ads-tmpl: Add
	initial framework for Valid_Scalars attribute.

2012-03-19  Robert Dewar  <dewar@adacore.com>

	* scng.adb (Scan): Recognize incorrect preprocessor directive

2012-03-19  Robert Dewar  <dewar@adacore.com>

	* atree.adb (Allocate_Initialize_Node): Use Num_Extension_Nodes
	* atree.ads (Num_Extension_Nodes): New variable
	* debug.adb: New debug flag -gnatd.N
	* gnat1drv.adb (Adjust_Global_Switches): Adjust
	Num_Extension_Nodes if -gnatd.N set

2012-03-19  Eric Botcazou  <ebotcazou@adacore.com>

	* einfo.ads: Minor update to First_Rep_Item and Has_Gigi_Rep_Item
	descriptions.

2012-03-19  Robert Dewar  <dewar@adacore.com>

	* opt.ads: Remove HLO_Active flag.
	* sem.adb: Remove call of high level optimizer.
	* sem.ads (New_Nodes_OK): Removed.
	* sem_ch10.adb: Remove references to New_Nodes_OK.
	* switch-c.adb: Remove handling of -gnatH switch.

2012-03-19  Yannick Moy  <moy@adacore.com>

	* sem_ch6.adb (Check_Subprogram_Contract): Do not emit warnings
	on trivially True or False postconditions and Ensures components
	of contract-cases.

2012-03-19  Robert Dewar  <dewar@adacore.com>

	* gnat_ugn.texi: Fix index entry for -gnatei (now we have
	ug_words entry).

2012-03-19  Hristian Kirtchev  <kirtchev@adacore.com>

	* sem_ch3.adb (Get_Discriminant_Value): Instead of looking
	at the immediate correcponsing discriminant, traverse a
	potential chain of discriminants produced by type derivations.
	(Root_Corresponding_Discriminant): Traverse a chain of inherited
	discriminants and return the topmost discriminant.

2012-03-19  Bob Duff  <duff@adacore.com>

	* debug.adb: Minor comment change.
	* gnat_ugn.texi: Update documentation for elaboration regarding
	indirect calls.

2012-03-19  Gary Dismukes  <dismukes@adacore.com>

	* exp_ch3.adb (Expand_N_Object_Declaration): In
	the case of an object of a class-wide interface type, where the
	declaration is rewritten as a renaming, call Set_Debug_Info_Needed
	on the renaming entity so that Materialize_Entity will be
	set. Also, change existing call (for other than interface cases)
	to call Set_Debug_Info_Needed rather than Set_Needs_Debug_Info
	(as specified for that flag).

2012-03-19  Hristian Kirtchev  <kirtchev@adacore.com>

	* sem_ch4.adb (Analyze_Allocator): Detect an allocator generated
	by the build-in-place machinery where the designated type is
	indefinite, but the underlying type is not. Do not emit errors
	related to missing initialization in this case.

2012-03-19  Robert Dewar  <dewar@adacore.com>

	* gnat_ugn.texi: Add documentation for -gnateinnn switch.
	* sem_elab.adb, put_alfa.adb, lib-xref-alfa.adb: Minor reformatting.
	* sem_prag.adb: Minor comment update.

2012-03-15  Robert Dewar  <dewar@adacore.com>

	* errout.ads: Add entry for translating -gnateinn to
	/MAX_INSTANTIATIONS for VMS.
	* hostparm.ads (Max_Instantiations): Moved to Opt.
	* opt.ads (Maximum_Instantiations): Moved from Hostparm, and renamed.
	* sem_ch12.adb (Maximum_Instantiations): New name of
	Max_Instantiations (Analyze_Package_Instantiation): Change error
	msg for too many instantiations (mention -gnateinn switch).
	* switch-c.adb (Scan_Front_End_Switches): Implement -gnateinn switch.
	* switch.ads: Minor comment update.
	* usage.adb (Usage): Output line for -maxeinn switch.
	* vms_data.ads: Add entry for MAX_INSTANTIATIONS (-gnateinn).

2012-03-15  Yannick Moy  <moy@adacore.com>

	* alfa.ads Update the decription of ALI sections.
	(Alfa_File_Record): Add a component Unit_File_Name to store the
	unit file name for subunits.
	* get_alfa.adb, put_alfa.adb Adapt to the possible presence of
	a unit file name.
	* lib-xref-alfa.adb (Add_Alfa_File): For subunits, retrieve the
	file name of the unit.

2012-03-15  Yannick Moy  <moy@adacore.com>

	* sem_ch6.adb (Check_Subprogram_Contract): Do
	not issue warning on missing 'Result in postcondition if all
	postconditions and contract-cases already get a warning for only
	referring to pre-state.

2012-03-15  Bob Duff  <duff@adacore.com>

	* debug.adb: Add new debug switch -gnatd.U, which disables the
	support added below, in case someone trips over a cycle, and needs
	to disable this.
	* sem_attr.adb (Analyze_Access_Attribute):
	Treat Subp'Access as a call for elaboration purposes.
	* sem_elab.ads, sem_elab.adb (Check_Elab_Call): Add support
	for Subp'Access.

2012-03-15  Vincent Pucci  <pucci@adacore.com>

	* sem.ads, sem.adb (Preanalyze): New routine.
	* sem_ch4.adb (Analyze_Quantified_Expression): Call to the
	Preanalyze routine in Sem added.  Renaming of Needs_Expansion
	into Need_Preanalysis.
	* sem_ch6.adb (Preanalyze): Removed.

2012-03-15  Robert Dewar  <dewar@adacore.com>

	* sem_ch4.adb (Analyze_Quantified_Expression): Add comment.
	* sem_prag.adb: Minor comment additions.
	* sem_attr.adb (Check_First_Last_Valid): Make sure prefix type
	is frozen.

2012-03-15  Vincent Pucci  <pucci@adacore.com>

	* sem_ch4.adb (Analyze_Quantified_Expression):
	Preanalyze the condition when the quantified expression will be
	further expanded.

2012-03-15  Yannick Moy  <moy@adacore.com>

	* sem_prag.adb, sem_util.adb, sem_util.ads, sem_attr.adb, sem_ch6.adb,
	sem_warn.adb: Minor refactoring, renaming Case_Pragma in CTC_Pragma,
	to refer to both Test_Case pragma and Contract_Case pragma (same
	acronym as in Spec_CTC_List).

2012-03-15  Robert Dewar  <dewar@adacore.com>

	* sem_prag.adb, sem_prag.ads, sem_util.ads, sem_attr.adb, sem_ch6.adb,
	sem_warn.adb: Minor reformatting.

2012-03-15  Hristian Kirtchev  <kirtchev@adacore.com>

	* exp_util.adb (Initialized_By_Ctrl_Function): Do not loop over
	selector names as the function call always appears at the top selected
	component.

2012-03-15  Ed Schonberg  <schonberg@adacore.com>

	* sem_ch12.adb (Validate_Access_Subprogram_Instance): keep
	Mode_Conformance check for older versions of the language.

2012-03-15  Yannick Moy  <moy@adacore.com>

	* gnat_ugn.texi Document the extension of option -gnatw.t.
	* sem_ch3.adb (Analyze_Declaration): Check for suspicious
	contracts only after contract cases have been semantically
	analyzed.
	* sem_ch6.adb (Check_Subprogram_Contract): Consider also Ensures
	components of contract cases for detecting suspicious contracts.

2012-03-15  Yannick Moy  <moy@adacore.com>

	* aspects.adb, aspects.ads (Aspect_Id): New GNAT aspect
	Aspect_Contract_Case.
	* gnat_rm.texi Document the new pragma/aspect
	Contract_Case. Correct the documentation of the existing
	pragma/aspect Test_Case with the new semantics.
	* sem_attr.adb (Analyze_Attribute): Allow use of 'Result in the
	Ensures component of a Contract_Case pragma.
	* sem_ch13.adb (Analyze_Aspect_Specifications): Check new aspect
	and translate it into a pragma.
	(Check_Aspect_At_Freeze_Point): Take into account the new aspect.
	* sem_ch3.adb, sinfo.adb, sinfo.ads Renaming of TC (for test case)
	into CTC (for contract and test case).
	* sem_ch6.adb (Process_PPCs): Generate Check pragmas from
	Contract_Case pragmas, similarly to what is done already for
	postconditions.
	* sem_prag.adb, sem_prag.ads (Check_Contract_Or_Test_Case):
	Renaming of Check_Test_Case.
	(Analyze_Pragma, Sig_Flags): Take into account the new pragma.
	* sem_util.adb, sem_util.ads Renaming to take into account the
	new pragma, so that functions which applied only to Test_Case
	now apply to both Test_Case and Contract_Case.
	* par-prag.adb, sem_warn.adb, snames.ads-tmpl Take into account
	the new pragma.

2012-03-15  Robert Dewar  <dewar@adacore.com>

	* sem_ch6.ads: Minor comment updates.
	* sem_ch12.adb: Minor comment clarification.

2012-03-15  Robert Dewar  <dewar@adacore.com>

	* sem_ch5.adb: Minor reformatting.

2012-03-15  Ed Schonberg  <schonberg@adacore.com>

	* exp_ch3.adb (Expand_N_Object_Declaration): When rewriting the
	declaration of a class-wide object, retain the Ekind to prevent
	subsequent misuse of constants.

2012-03-15  Yannick Moy  <moy@adacore.com>

	* gnat_rm.texi, gnat_ugn.texi: Minor correction of invariant
	terminology.

2012-03-15  Hristian Kirtchev  <kirtchev@adacore.com>

	* exp_util.adb (Initialized_By_Ctrl_Function): Add code to
	process the case when a function call appears in object.operation
	format.

2012-03-15  Ed Schonberg  <schonberg@adacore.com>

	* sem_ch6.ads, sem_ch6.adb (Check_Subtype_Conformant): add
	Get_Inst formal, so that conformance within an instantiation
	follows renamings of formals. This is similar to what is already
	done in Check_Mode_conformant.
	* sem_ch12.adb (Vailidate_Access_Subprogram_Instance): check that
	formal and actual are subtype conformant. Previously only mode
	conformance was required.

2012-03-15  Robert Dewar  <dewar@adacore.com>

	* par-ch6.adb, einfo.ads, sem_eval.adb, sem_eval.ads,
	sem_case.adb: Minor reformatting.

2012-03-15  Robert Dewar  <dewar@adacore.com>

	* exp_attr.adb (Expand_N_Attribute_Reference): Add handling
	of First_Valid/Last_Valid.
	* sem_attr.adb (Check_First_Last_Valid): New procedure
	(Analyze_Attribute): Add handling of First_Valid and Last_Valid
	(Eval_Attribute): ditto.
	* snames.ads-tmpl: Add entries for First_Valid and Last_Valid.

2012-03-15  Ed Schonberg  <schonberg@adacore.com>

	* exp_ch5.adb (Expand_Predicated_Loop): Suppress warnings on
	loop variable, for the unusual case where the range has a single
	element and the loop variable has no visible assignment to it.

2012-03-15  Vincent Pucci  <pucci@adacore.com>

	* exp_ch4.adb (Expand_N_Quantified_Expression): Expand the
	original quantified expression node.
	* sem_ch4.adb (Analyze_Quantified_Expression): Properly analyze
	the quantified expression and preserve the original non-analyzed
	quantified expression when an expansion is needed.
	* sem_ch5.adb (Analyze_Iteration_Scheme): Special treatment
	for quantified expressions.
	(Analyze_Iterator_Specification): Special treatment for quantified
	expressions.

2012-03-15  Ed Falis  <falis@adacore.com>

	* s-vxwork-ppc.ads: Update FP_CONTEXT so name of former pad
	field matches VxWorks headers.

2012-03-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>

	* gcc-interface/Makefile.in (mips-sgi-irix6*): Remove.

	* a-intnam-irix.ads, mlib-tgt-specific-irix.adb,
	s-intman-irix.adb, s-mastop-irix.adb, s-osinte-irix.adb,
	s-osinte-irix.ads, s-proinf-irix-athread.adb,
	s-proinf-irix-athread.ads, s-taprop-irix.adb, s-tasinf-irix.ads,
	system-irix-n32.ads, system-irix-n64.ads, system-irix-o32.ads:
	Remove.

	* adaint.c [__mips && __sgi]: Remove.
	(__gnat_number_of_cpus) [__mips && __sgi]: Remove.
	[IS_CROSS && !(__mips && __sgi)]: Remove.
	* adaint.h [sgi && _LFAPI]: Remove.
	* cstreams.c (__gnat_full_name) [sgi]: Remove.
	* env.c (__gnat_unsetenv) [__mips && __sgi]: Remove.
	(__gnat_clearenv) [__mips && __sgi]: Remove.
	* errno.c (_SGI_MP_SOURCE): Remove.
	* gsocket.h [sgi]: Remove.
	* init.c: Remove IRIX reference.
	[sgi]: Remove.
	* link.c [sgi]: Remove.
	* s-oscons-tmplt.c [__mips && __sgi] (IOV_MAX): Don't define.
	(main) [__mips && __sgi] (MAX_tv_sec): Don't define.
	(CLOCK_SGI_FAST, CLOCK_SGI_CYCLE): Remove.
	* sysdep.c [sgi]: Remove.
	(getc_immediate_common) [sgi]: Remove.
	(__gnat_localtime_tzoff) [sgi]: Remove.
	* terminals.c [__mips && __sgi] (IRIX): Don't define.
	[IRIX] (USE_GETPTY): Don't define.
	(allocate_pty_desc) [USE_GETPTY]: Remove.

	* g-traceb.ads: Remove IRIX reference.
	* g-trasym.ads: Likewise.
	* memtrack.adb: Likewise.
	* s-interr-sigaction.adb: Likewise.

	* gnat_rm.texi (Implementation Advice): Remove SGI info.
	(Implementation Defined Characteristics): Likewise.
	* gnat_ugn.texi (Summary of Run-Time Configurations, mips-irix):
	Remove.
	(Irix-Specific Considerations): Remove.

2012-03-13  Tristan Gingold  <gingold@adacore.com>

	* gcc-interface/gigi.h (flag_vms_malloc64): Refine condition.

2012-03-13  Tristan Gingold  <gingold@adacore.com>

	* sysdep.c: Adjust condition after removal of __osf__.

2012-03-12  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc-interface/gigi.h (shift_unc_components_for_thin_pointers): Kill.
	* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Array_Type>: Remove call
	to above function.
	* gcc-interface/trans.c (Attribute_to_gnu) <Attr_Pool_Address>: Adjust
	handling of thin pointers.
	<Attr_Descriptor_Size>: Likewise.
	(gnat_to_gnu) <N_Free_Statement>: Likewise.
	* gcc-interface/utils.c (shift_unc_components_for_thin_pointers): Kill.
	(convert_to_fat_pointer): Adjust handling of thin pointers.
	(convert) <POINTER_TYPE>: Likewise.
	* gcc-interface/utils2.c (build_unary_op) <INDIRECT_REF>: Likewise.

2012-03-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>

	* gcc-interface/Makefile.in (alpha*-dec-osf*): Remove.
	* a-intnam-tru64.ads, mlib-tgt-specific-tru64.adb,
	s-mastop-tru64.adb, s-osinte-tru64.adb, s-osinte-tru64.ads,
	s-taprop-tru64.adb, s-tasinf-tru64.ads, s-taspri-tru64.ads,
	system-tru64.ads: Remove.

	* adaint.c (__gnat_number_of_cpus) [__alpha__ && __osf__]:
	Remove.
	[IS_CROSS] [!(__alpha__ && __osf__)]: Remove.
	* env.c [__alpha__ && __osf__]: Remove.
	* gsocket.h (_OSF_SOURCE): Remove.
	(HAVE_THREAD_SAFE_GETxxxBYyyy) [__osf__]: Remove.
	* init.c [__alpha__ && __osf__]: Remove.
	* link.c [__osf__]: Remove.
	* s-oscons-tmplt.c [__alpha__ && __osf__]: Remove.
	[__osf__ && !_SS_MAXSIZE]: Remove.
	* sysdep.c [__osf__]: Remove.
	* terminals.c [__alpha__ && __osf__]: Remove.
	[OSF1]: Remove.

	* g-traceb.ads: Remove Tru64 reference.
	* g-trasym.ads: Likewise.
	* gnat_ugn.texi (Linking a Mixed C++ & Ada Program): Likewise.
	(Summary of Run-Time Configurations): Likewise.
	* memtrack.adb: Likewise.

2012-03-12  Tristan Gingold  <gingold@adacore.com>

	* gcc-interface/decl.c (gnat_to_gnu_param): Use flag_vms_malloc64
	instead of TARGET_MALLOC64.
	* gcc-interface/gigi.h (flag_vms_malloc64): Define instead
	of TARGET_MALLOC64.

2012-03-09  Robert Dewar  <dewar@adacore.com>

	* a-direct.adb, comperr.adb, freeze.adb: Minor reformatting.

2012-03-09  Arnaud Charlet  <charlet@adacore.com>

	* s-taskin.adb (Initialize_ATCB): Set Task_Image_Len to
	0 so that we never access this field uninitialized (e.g. in
	Task_Primitives.Operations.Enter_Task for the environment task).

2012-03-09  Vincent Pucci  <pucci@adacore.com>

	* exp_ch5.adb (Expand_Iterator_Loop):
	Call to Expand_Iterator_Loop_Over_Array added.
	(Expand_Iterator_Loop_Over_Array): New routine. Expansion of
	"of" iterator loop over arrays. Multidimensional array case added.

2012-03-09  Eric Botcazou  <ebotcazou@adacore.com>

	* uintp.ads: Fix minor pasto in comment.

2012-03-09  Vasiliy Fofanov  <fofanov@adacore.com>

	* a-direct.adb: Do not strip the trailing directory separator
	from path, as this is already done inside Normalize_Pathname;
	doing it again produces the wrong result on Windows for the
	drive's root dir (i.e. "X:\" becomes "X:").

2012-03-09  Thomas Quinot  <quinot@adacore.com>

	* exp_attr.adb, freeze.adb, sem_attr.adb, aspects.adb, aspects.ads,
	sem_ch13.adb, snames.ads-tmpl (Exp_Attr.Expand_N_Attribute_Reference):
	Add Attribute_Scalar_Storage_Order.
	(Sem_Attr.Analyze_Attribute, Eval_Attribute): Ditto.
	(Aspects): Add Aspect_Scalar_Storage_Order (Snames): Add
	Name_Scalar_Storage_Order and Attribute_Scalar_Storage_Order.
	(Sem_Ch13.Analyze_Attribute_Definition_Clause): Add processing
	for Scalar_Storage_Order.
	(Freeze): If Scalar_Storage_Order is specified, check that it
	is compatible with Bit_Order.

2012-03-09  Robert Dewar  <dewar@adacore.com>

	* s-osinte-linux.ads, sem_util.adb, s-taprop-linux.adb, exp_ch4.adb,
	a-strsup.ads, sem_ch6.adb, a-stwisu.ads, exp_ch3.adb,
	a-stzsup.ads: Minor reformatting.

2012-03-09  Thomas Quinot  <quinot@adacore.com>

	* s-ransee-vms.adb: Minor reformatting.

2012-03-09  Arnaud Charlet  <charlet@adacore.com>

	* comperr.adb (Delete_SCIL_Files): Fix handling of
	N_Package_Renaming_Declaration and N_Generic_Package_Declaration.

2012-03-09  Javier Miranda  <miranda@adacore.com>

	* sem_ch6.adb (Check_Body_To_Inline): In AAMP and VM targets
	use frontend inlining at all optimization levels.
	* sem_util.adb (Must_Inline): In AAMP and VM targets, given that
	there is no inlining support in the backend, use also frontend
	inlining when compiling with optimizations enabled.
	* exp_ch6.adb (Expand_Call): Minor code reorganization.

2012-03-09  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc-interface/ada-tree.h (TYPE_VAX_FLOATING_POINT_P): Move around.
	(TYPE_UNCONSTRAINED_ARRAY): Adjust comment.
	* gcc-interface/trans.c (Attribute_to_gnu) <Attr_Pool_Address>: Tidy
	up.  Add comment and use canonical predicate for thin pointers.
	(gnat_to_gnu) <N_Free_Statement>: Tidy up and reorder.  Add comment
	and use canonical predicate for thin pointers.
	* gcc-interface/utils.c (convert_to_fat_pointer): Remove superfluous
	'else' and use standard name.
	(convert_to_thin_pointer): Delete.
	(convert) <POINTER_TYPE>: Do the difference in sizetype directly and
	change obsolete idioms.  Do not call above function.
	(unchecked_convert): Fix formatting.
	* gcc-interface/utils2.c (build_unary_op) <INDIRECT_REF>: In the thin
	pointer case, use byte_position to get the field position.

2012-03-07  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc-interface/decl.c (gnat_to_gnu_entity): Do not set flags on the
	DECL node built for a type which has a non-trivial equivalent type.

2012-03-07  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc-interface/gigi.h (rest_of_type_decl_compilation): Delete.
	* gcc-interface/decl.c (defer_finalize_level): Likewise.
	(defer_finalize_list): Likewise.
	(gnat_to_gnu_entity): Delete references to above variables and do not
	call rest_of_type_decl_compilation.
	(rest_of_type_decl_compilation): Delete.
	(rest_of_type_decl_compilation_no_defer): Likewise.
	* gcc-interface/utils.c (rest_of_record_type_compilation): Do not call
	rest_of_type_decl_compilation.
	(create_type_decl): Likewise.
	(update_pointer_to): Likewise.

2012-03-07  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc-interface/trans.c (Identifier_to_gnu): Don't unshare initializer.
	(add_decl_expr): Mark external DECLs as used.
	* gcc-interface/utils.c (convert) <CONSTRUCTOR>: Copy the vector.

2012-03-07  Tristan Gingold  <gingold@adacore.com>

	* s-ransee-vms.adb: New file.
	* gcc-interface/Makefile.in: Use s-ransee-vms.adb on VMS.
	* gcc-interface/Make-lang.in: Update dependencies.

2012-03-07  Bob Duff  <duff@adacore.com>

	* rtsfind.ads: Add support for finding Super_String types.
	* sem_util.ads, sem_util.adb (Is_Bounded_String): New function
	to determine whether a given type is a bounded string type.
	(Is_Fully_Initialized_Type): Return True for bounded
	string types, to suppress bogus warnings.
	* exp_ch4.adb (Expand_Composite_Equality): Special case for bounded
	strings: equality composes. This allows us to remove default values in
	super strings.
	* a-strsup.ads, a-stwisu.ads, a-stzsup.ads: Update comments.
	* exp_ch3.adb (Expand_Freeze_Record_Type): Comment.

2012-03-07  Robert Dewar  <dewar@adacore.com>

	* sem_util.adb, exp_ch4.adb, exp_ch6.adb, sem_ch6.adb: Minor
	reformatting.

2012-03-07  Sergey Rybin  <rybin@adacore.com frybin>

	* gnat_ugn.texi: gnatpp: fix paragraph about sources with
	preprocessor directives.

2012-03-07  Arnaud Charlet  <charlet@adacore.com>

	* s-osinte-linux.ads, s-taprop-linux.adb (prctl): New function.
	(Enter_Task): Call prctl when relevant.

2012-03-07  Tristan Gingold  <gingold@adacore.com>

	* s-osinte-vms.ads: pthread_mutex_setname_np: new function.

2012-03-07  Ed Schonberg  <schonberg@adacore.com>

	* sem_ch6.adb (Process_Formals): a generic subprogram with
	a formal incomplete type does not require a freeze node.

2012-03-07  Bob Duff  <duff@adacore.com>

	* sem_util.ads: Minor reformatting.

2012-03-07  Geert Bosch  <bosch@adacore.com>

	* targparm.ads: New target parameter Atomic_Sync_Default,
	defaulting to True.
	* targparm.adb (Get_Target_Parameters): Add processing for
	Atomic_Sync_Default.
	* gnat1drv.adb (Adjust_Global_Switches): Adjust Supress_Options
	based on ASD.

2012-03-07  Javier Miranda  <miranda@adacore.com>

	* sem_ch3.adb (Analyze_Object_Declaration): If the object
	declaration has an init expression then stop the analysis of the
	object declaration if the expression which initializes the object
	is a call to an inlined function which returns an unconstrained
	and has been expanded into a procedure call.
	* sem_ch5.adb (Has_Call_Using_Secondary_Stack): Add missing
	support to handle selected components.
	* sem_ch6.ads (Cannot_Inline): Adding parameter Is_Serious plus
	documentation.
	* sem_ch6.adb (Check_And_Build_Body_To_Inline): New
	subprogram which implements the checks required by the
	new rules for frontend inlining and builds the body to inline.
	(Analyze_Subprogram_Body_Helper): Move code that
	checks inlining of subprogram that has nested subprogram
	to Check_And_Build_Body_To_Inline.  Replace call to
	Build_Body_To_Inline by call to the new subprogram
	Check_And_Build_Body_To_Inline.
	(Cannot_Inline): New implementation.
	* sem_ch12.adb (Analyze_Package_Instantiation.Must_Inline_Subp):
	New subprogram.
	* sem_util.ad[sb] (Must_Inline): New subprogram.
	(Returns_Unconstrained_Type): New subprogram.
	* sem_res.adb (Resolve_Call): Do not create a transient scope
	for inlined calls.
	* inline.ads (Analyzing_Inlined_Bodies): Remove unreferenced variable.
	* inline.adb (Analyze_Inlined_Bodies, Initialize): Remove setting
	to false the variable Analyzing_Inlined_Bodies.  Fix comments.
	* exp_ch4.adb (Expand_N_Allocator): Fix handling of finalization master.
	* exp_ch6.ads (List_Inlining_Info): New subprogram.
	* exp_ch6.adb (Expand_Call.Do_Inline): New subprogram.
	(Expand_Call.Do_Inline_Always): New subprogram.
	(In_Unfrozen_Instance): Move the declaration of this subprogram.
	(Expand_Inlined_Call.Reset_Dispatching_Calls): New subprogram.
	(Expand_Inlined_Call): Adding new support for inlining functions
	that return unconstrained types.
	(List_Inlining_Info): New subprogram.
	* debug.adb Document flags -gnatd.j and -gnatd.k
	* gnat1drv.adb Add call to generate the new listing of inlined
	calls and calls passed to the backend.

2012-03-07  Robert Dewar  <dewar@adacore.com>

	* sem_ch5.adb, s-vaflop.adb, s-taprop-vms.adb, exp_ch6.adb,
	s-gearop.adb, sem_ch6.adb, g-trasym.adb: Minor reformatting.

2012-03-07  Javier Miranda  <miranda@adacore.com>

	* a-ngrear.ads: Add documentation.

2012-03-07  Tristan Gingold  <gingold@adacore.com>

	* s-taprop-vms.adb (Create_Task): set thread name.
	* s-osinte-vms.ads (pthread_attr_setname_np): Declare.

2012-03-07  Arnaud Charlet  <charlet@adacore.com>

	* g-trasym.adb: Minor reformatting.

2012-03-07  Robert Dewar  <dewar@adacore.com>

	* a-ngrear.ads: Minor addition of ??? comment.

2012-03-07  Gary Dismukes  <dismukes@adacore.com>

	* exp_ch4.adb (Apply_Accessibility_Check): Call
	Remove_Side_Effects in the build-in-place case, to ensure that
	we capture the call and don't end up with two calls.

2012-03-07  Javier Miranda  <miranda@adacore.com>

	* exp_ch6.adb (Expand_Inlined_Call): Skip inlining of functions
	that return unconstrained types using an extended return statement
	since the support for inlining these functions has not been yet
	added to the frontend.
	* s-vaflop.adb, s-vaflop-vms-alpha.adb: Code reorganization.
	* a-ngrear.ads: Replace all the Inline_Always pragmas by pragma
	Inline.
	* a-ngrear.adb (Eigenvalues, Transpose): Restructured to use
	extended return statement.
	* a-strsup.adb, a-stzsup.adb, a-stwisu.adb (Concat, Super_Slice,
	Super_To_String): Restructured to use extended return statement.
	* a-chahan.adb (To_Basic, To_Lower, To_Upper): Restructured to
	use extended return statement.
	* s-gearop.adb (Diagonal, Matrix_Elementwise_Operation,
	Vector_Elementwise_Operation, Matrix_Elementwise_Operation,
	Matrix_Matrix_Scalar_Elementwise_Operation,
	Vector_Vector_Elementwise_Operation,
	Vector_Vector_Scalar_Elementwise_Operation,
	Matrix_Scalar_Elementwise_Operation,
	Vector_Scalar_Elementwise_Operation,
	Scalar_Matrix_Elementwise_Operation,
	Scalar_Vector_Elementwise_Operation, Matrix_Matrix_Product,
	Matrix_Vector_Product, Outer_Product, Unit_Matrix, Unit_Vector,
	Vector_Matrix_Product): Restructured to use extended return
	statement.

2012-03-07  Vincent Pucci  <pucci@adacore.com>

	* sem_ch5.adb (One_Bound): Minor reformatting.

2012-03-07  Tristan Gingold  <gingold@adacore.com>

	* s-osinte-vms-ia64.adb, s-osinte-vms-ia64.ads, s-osinte-vms.adb,
	s-osinte-vms.ads, gcc-interface/Makefile.in: Merge s-osinte-vms and
	s-osinte-vms-ia64.

2012-03-07  Ed Schonberg  <schonberg@adacore.com>

	* checks.adb (Apply_Predicate_Check): Do not generate a predicate
	check is the context is an internally generated type-specific
	function.
	* sem_ch6.adb (Process_PPCs); the formals of internally generated
	type-specific functions do not get assertion checks.

2012-03-07  Yannick Moy  <moy@adacore.com>

	* gnat_rm.texi: Minor renaming of title.
	* gnat_ugn.texi: Minor correction.

2012-03-07  Vincent Pucci  <pucci@adacore.com>

	* exp_ch4.adb (Expand_N_Quantified_Expression): Minor
	reformating.
	* sem_ch4.adb (Analyze_Quantified_Expression): Creation and
	analysis of the iteration scheme added in all cases.
	* sem_ch5.adb (Analyze_Iteration_Scheme): Minor reformating.
	(Analyze_Iterator_Specification): Minor reformating.
	* sem_res.adb (Resolve_Quantified_Expression): Resolution of
	the condition added in all cases.

2012-03-07  Thomas Quinot  <quinot@adacore.com>

	* einfo.adb, einfo.ads: Add flag Reverse_Storage_Order.

2012-03-07  Yannick Moy  <moy@adacore.com>

	* gnat_rm.texi, gnat_ugn.texi: Rewording of GNAT UG and GNAT RM to
	account for Ada 2012 assertions, and their pragma counterparts in GNAT.

2012-03-07  Thomas Quinot  <quinot@adacore.com>

	* exp_attr.adb, sem_attr.adb: Minor reformatting.

2012-03-07  Bob Duff  <duff@adacore.com>

	* hostparm.ads (Max_Instantiations): Increase parameter.

2012-03-07  Bob Duff  <duff@adacore.com>

	* par-prag.adb: Minor code rearrangement.

2012-03-07  Bob Duff  <duff@adacore.com>

	* a-strsup.ads, a-stwisu.ads, a-stzsup.ads (Super_String):
	Remove default initial value for Data. It is no longer needed
	because "=" now composes properly for untagged records. This
	default has caused efficiency problems.

2012-03-07  Ed Schonberg  <schonberg@adacore.com>

	* sem_res.adb (Resolve_Actuals): If the actual is a selected
	component of an anonymous access type, whose prefix is a variable,
	treat the variable as if it may be modified by the call, to
	suppress spurious warnings that a variable might be declared as
	a constant.

2012-03-07  Thomas Quinot  <quinot@adacore.com>

	* einfo.adb, einfo.ads: Remove unused entity flags.

2012-03-07  Eric Botcazou  <ebotcazou@adacore.com>

	* gnat_ugn.texi (Inline Assembler): Fix swapping of Input and
	Output operands throughout.

2012-03-07  Hristian Kirtchev  <kirtchev@adacore.com>

	* sem_ch12.adb (Earlier): When two nodes come from the same
	generic instantiation, compare their locations. Otherwise always
	use the top level locations of the nodes.

2012-03-07  Thomas Quinot  <quinot@adacore.com>

	* einfo.ads, sem_prag.adb: Minor reformatting.

2012-03-05  Jason Merrill  <jason@redhat.com>

	* gcc-interface/Make-lang.in (doc/gnat_ugn.texi): Build xgnatugn
	before using it.

2012-03-04  Eric Botcazou  <ebotcazou@adacore.com>

	* gnatvsn.ads (Library_Version): Bump to 4.8.

2012-03-03  H.J. Lu  <hongjiu.lu@intel.com>

	* init.c (__gnat_adjust_context_for_raise): Also check
	"orq $0x0,(%esp)" for x32.

	* link.c (__gnat_default_libgcc_subdir): Set to libx32 for x32.

	* gcc-interface/Makefile.in (arch): Set to x32 if MULTISUBDIR
	is /x32 and add support for x32.

2012-02-29  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc-interface/decl.c (components_to_record): Add ARTIFICIAL parameter
	and set TYPE_ARTIFICIAL according to it.  Adjust recursive call.
	(gnat_to_gnu_entity) <E_Record_Type>: Adjust call to above function.
	* gcc-interface/utils.c (rest_of_record_type_compilation): Do not
	invoke rest_of_type_decl_compilation on the parallel type, if any.

2012-02-29  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc-interface/utils.c (gnat_write_global_declarations): Make sure the
	dummy global built for global types is preserved.

2012-02-27  Tristan Gingold  <gingold@adacore.com>

	* gcc-interface/decl.c (gnat_to_gnu_entity) [E_String_Type,
	E_Array_Type]: Reuse dummy fat type for gnu_ptr_template and
	gnu_template_type.

2012-02-27  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc-interface/ada-tree.h (TYPE_PACKED_ARRAY_TYPE_P): Add checking.
	(TYPE_BY_REFERENCE_P): New flag.
	(TYPE_IS_BY_REFERENCE_P): New macro.
	(TYPE_DUMMY_P): Add checking and remove VOID_TYPE.
	(TYPE_IS_DUMMY_P): Adjust for above change.
	* gcc-interface/decl.c (gnat_to_gnu_entity): Use TYPE_BY_REFERENCE_P
	and TYPE_IS_BY_REFERENCE_P instead of TREE_ADDRESSABLE.
	(gnat_to_gnu_param): Likewise.
	(maybe_pad_type): Likewise.
	(make_type_from_size): Use TYPE_IS_PACKED_ARRAY_TYPE_P.
	* gcc-interface/misc.c (must_pass_by_ref): Use TYPE_IS_BY_REFERENCE_P
	instead of TREE_ADDRESSABLE.
	* gcc-interface/trans.c (finalize_nrv): Likewise.
	(call_to_gnu): Likewise.  Do not create a temporary for return values
	with by-reference type here.
	(gnat_to_gnu): Test TYPE_IS_DUMMY_P instead of TYPE_DUMMY_P.
	(gnat_gimplify_expr) <ADDR_EXPR>: Don't do anything for non-constant
	CONSTRUCTORs and calls.
	* gcc-interface/utils.c (make_dummy_type): Get the equivalent type of
	the underlying type and use it throughout.  Use TYPE_IS_BY_REFERENCE_P
	instead of TREE_ADDRESSABLE.
	* gcc-interface/utils2.c (build_cond_expr): Deal with by-reference
	types explicitly.

2012-02-27  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc-interface/decl.c (gnat_to_gnu_entity) <object>: Revert previous
	change that creates a special VAR_DECL for debugging purposes.  For an
	aliased object with an unconstrained nominal subtype, make its type a
	thin reference to the underlying object.
	* gcc-interface/utils2.c (build_unary_op) <INDIRECT_REF>: Deal with
	expressions built for the initialization of above objects.

2012-02-24  Dave Korn  <dave.korn.cygwin@gmail.com>

	* gcc-interface/Makefile.in (WIN_SO_PREFIX [windows targets]): New
	Windows-specific make variable.
	(WIN_SO_INSTALL_DIR [windows targets]): Likewise.
	(install-gnatlib): Respect the above during installation when set,
	and also install any windows import library that has been built.
	(gnatlib-shared-win32): Use WIN_SO_PREFIX to name output DLL and also
	build a corresponding import library.

2012-02-22  Robert Dewar  <dewar@adacore.com>

	* exp_util.adb, make.adb, sem_dim.adb, sem_ch4.adb, exp_disp.adb: Minor
	reformatting.

2012-02-22  Geert Bosch  <bosch@adacore.com>

	* g-bytswa-x86.adb, g-bytswa.adb, gcc-interface/Makefile.in: Remove
	x86-specific version of byteswap and use GCC builtins instead.

2012-02-22  Tristan Gingold  <gingold@adacore.com>

	* gcc-interface/decl.c (gnat_to_gnu_entity) [E_String_Type,
	E_Array_Type]: Translate component ealier.

2012-02-22  Robert Dewar  <dewar@adacore.com>

	* par-ch3.adb (P_Signed_Integer_Type_Definition): Specialize
	error message for 'Range.

2012-02-22  Pascal Obry  <obry@adacore.com>

	* s-taprop-mingw.adb (Finalize_TCB): Do not wait on thread handle as
	this is our own thread.

2012-02-22  Sergey Rybin  <rybin@adacore.com frybin>

	* tree_io.ads: Update ASIS_Version_Number because of the changes
	in Snames.

2012-02-22  Hristian Kirtchev  <kirtchev@adacore.com>

	* exp_ch7.adb (Create_Finalizer): Suppress elaboration checks on 
	stack-related finalizers.

2012-02-22  Ed Schonberg  <schonberg@adacore.com>

	* sem_ch6.adb (Analyze_Expression_Function): If the construct
	is a completion, indicate that its formals are the formals of
	a completion, and as such do not get a cross- reference entry.
	(Analyze_Subprogram_Specification): Do not generate a definition
	for the entity of an expression function, because it may be a
	completion. Definition will be generated if needed when analyzing
	the generated subprogram declaration.

2012-02-22  Vincent Celier  <celier@adacore.com>

	* make.adb (Check): When checking if an object file is in the
	correct object directory, get the unit name from a previous call
	to Check_Source_Info_In_ALI.
	* makeutl.adb (Check_Source_Info_In_ALI): Return the name of
	the unit when everything is OK, otherwise return No_Name.
	* makeutl.ads (Check_Source_Info_In_ALI): Return Name_Id instead
	of Boolean

2012-02-22  Ed Schonberg  <schonberg@adacore.com>

	* sem_ch4.adb (Find_Equality_Types, Try_One_Interp): In an
	instance, the operator is visible if an operand is of some
	numeric type which is not in use or directly visible, and the
	other operand is a numeric literal.

2012-02-22  Tristan Gingold  <gingold@adacore.com>

	* init.c: Minor code clean up.
	* gcc-interface/Make-lang.in: Update dependencies.

2012-02-22  Arnaud Charlet  <charlet@adacore.com>

	* gnatlink.adb (Gnatlink): Use -gnatcC in CodePeer_Node,
	otherwise GCC will generate an object file.

2012-02-22  Vincent Celier  <celier@adacore.com>

	* projects.texi: Correct typo related to "**" in Source_Dirs.

2012-02-22  Steve Baird  <baird@adacore.com>

	* sem_prag.adb (Analyze_PPC_In_Decl_Part): Clean up generation of
	error message text.

2012-02-22  Vincent Pucci  <pucci@adacore.com>

	* rtsfind.adb (Get_Unit_Name): Ada_Numerics_Child and
	System_Dim_Child cases added.
	* rtsfind.ads: Ada_Numerics,
	Ada_Numerics_Generic_Elementary_Functions, System_Dim,
	System_Dim_Float_IO and System_Dim_Integer_IO added to the list
	of RTU_Id.  Ada_Numerics_Child and System_Dim_Child added as
	new RTU_Id subtypes.
	* sem_dim.adb (Is_Dim_IO_Package_Entity): Use of
	Rtsfind to verify the package entity is located either
	in System.Dim.Integer_IO or in System.Dim.Float_IO.
	(Is_Dim_IO_Package_Instantiation): Minor
	changes.  (Is_Elementary_Function_Call): Removed.
	(Is_Elementary_Function_Entity): New routine.
	(Is_Procedure_Put_Call): Is_Dim_IO_Package_Entity call added.
	* snames.ads-tmpl: Name_Dim and Name_Generic_Elementary_Functions
	removed.

2012-02-22  Vincent Pucci  <pucci@adacore.com>

	* sem_prag.adb: Minor reformatting.

2012-02-22  Ed Schonberg  <schonberg@adacore.com>

	* sem_ch3.adb (Find_Type_Name): When analyzing a private type
	declaration that is the completion of a tagged incomplete type, do
	not associate the class-wide type already created with the private
	type to prevent order-of-elaboration issues in the back-end.
	* exp_disp.adb (Find_Specific_Type): Find specific type of
	a class-wide type, and handle the case of an incomplete type
	coming	either from a limited_with clause or from an incomplete
	type declaration. Used when expanding a dispatchin call and
	generating tag checks (minor refactoring).

2012-02-22  Robert Dewar  <dewar@adacore.com>

	* exp_ch5.adb: Add comment.
	* sem_ch12.adb, exp_ch6.adb: minor reformatting

2012-02-22  Ed Schonberg  <schonberg@adacore.com>

	* freeze.adb (Freeze_Entity): Do not perform type layout within
	a generic unit.

2012-02-22  Eric Botcazou  <ebotcazou@adacore.com>

	* init.c (__gnat_error_handler) [Linux]: Map SIGBUS to
	Storage_Error.

2012-02-22  Ed Schonberg  <schonberg@adacore.com>

	* exp_ch5.adb (Expand_N_Assignment_Statement): Reject an
	assignment to a classwide type whose type is limited, as
	can happen in an instantiation in programs that run afoul or
	AI05-0087.

2012-02-17  Ed Schonberg  <schonberg@adacore.com>

	* exp_ch6.adb (Legal_Copy): If layout is not
	determined in the front-end, do not emit error message when
	by-reference actual is potentially unaligned.
	* gcc-interface/decl.c (gnat_to_gnu_field): Better error message for
	illegal representation clause on tagged or aliased component, or on
	by-reference type with forced alignment.

2012-02-17  Nicolas Roche  <roche@adacore.com>

	* gcc-interface/Makefile.in: Ensure FORCE_DEBUG_ADAFLAGS variables is
	propagated by gnatlib-sjlj and gnatlib-zcx targets.
	* gcc-interface/Make-lang.in: Update dependencies.

2012-02-17  Thomas Quinot  <quinot@adacore.com>

	* sem_ch12.adb (Analyze_Package_Instantiation): For an
	instantiation in an RCI library unit, omit the instance body
	if the RCI library unit is the instance itself (E.2.3(18)),
	but include the body if the instantiation is within the RCI
	declaration (12.3(12)).

2012-02-17  Steve Baird  <baird@adacore.com>

	* sem_prag.adb (Analyze_PPC_In_Decl_Part): Pre'Class and
	Post'Class aspects can only be specified for a primitive operation
	of a tagged type.

2012-02-17  Yannick Moy  <moy@adacore.com>

	* gnat_rm.texi: Minor shuffling.

2012-02-17  Ed Schonberg  <schonberg@adacore.com>

	* aspects.adb: Expression functions can carry pre/postconditions.
	* par-ch6.adb (P_Subprogram): look for optional pre/postconditions
	in an expression function.
	* sem_prag (Check_Precondition_Postcondition): legal on expression
	functions.

2012-02-17  Vincent Pucci  <pucci@adacore.com>

	* a-cdlili.adb, a-cidlli.adb, a-cihama.adb, a-cimutr.adb,
	* a-ciorma.adb, a-cohama.adb, a-coinve.adb, a-comutr.adb,
	* a-convec.adb, a-coorma.adb (Adjust): New routine.
	(Constant_Reference): Increment Busy and Lock counters.
	(Reference): Increase Busy and Lock counters.
	(Finalize): New routine.
	* a-cihase.adb, a-ciorse.adb, a-cohase.adb, a-coorse.adb:
	(Adjust): New routine.	(Constant_Reference): Increment Busy
	and Lock counters.
	(Finalize): New routine.
	* a-cdlili.ads, a-cidlli.ads, a-cihama.ads, a-cihase.ads,
	* a-cimutr.ads, a-ciorma.ads, a-ciorse.ads, a-cohama.ads,
	* a-cohase.ads, a-coinve.ads, a-comutr.ads, a-convec.ads,
	* a-coorma.ads, a-coorse: Controlled component added to the
	reference types.

2012-02-17  Robert Dewar  <dewar@adacore.com>

	* restrict.adb (Check_Restriction): Add special handling for
	No_Obsolescent_Features.

2012-02-17  Hristian Kirtchev  <kirtchev@adacore.com>

	* exp_util.adb (Find_Finalize_Address): When dealing with an
	internally built full view for a type with unknown discriminants,
	use the original record type.

2012-02-17  Robert Dewar  <dewar@adacore.com>

	* sem_dim.adb: Minor reformatting.

2012-02-17  Yannick Moy  <moy@adacore.com>

	* gnat_rm.texi: Minor rewording.

2012-02-17  Thomas Quinot  <quinot@adacore.com>

	* sem_aggr.adb: Minor reformatting.

2012-02-17  Robert Dewar  <dewar@adacore.com>

	* gnat_ugn.texi: Update doc for -gnatw.m to include 2*x case.

2012-02-17  Vincent Pucci  <pucci@adacore.com>

	* sem_dim.adb (Is_Dim_IO_Package_Entity): New routine.
	(Is_Dim_IO_Package_Instantiation): Is_Dim_IO_Package_Entity
	call added.
	(Is_Procedure_Put_Call): Is_Dim_IO_Package_Entity
	call added.
	* s-dim.ads: Make package Pure.

2012-02-17  Gary Dismukes  <dismukes@adacore.com>

	* prj-nmsc.adb: Minor reformatting.

2012-02-17  Yannick Moy  <moy@adacore.com>

	* gnat_rm.texi: Update GNAT RM with a separate chapter on restrictions.

2012-02-17  Yannick Moy  <moy@adacore.com>

	* gnat_ugn.texi: Fix typos.

2012-02-17  Pascal Obry  <obry@adacore.com>

	* prj-nmsc.adb: prj-nmsc.adb (Check_Aggregated): Check that an
	aggregate is not Externally_Built.

2012-02-17  Ed Schonberg  <schonberg@adacore.com>

	* sem_aggr.adb (Resolve_Record_Aggregate): If a composite
	component has a box association, copy the default value using
	the current scope as the scope of internal types, to prevent
	scoping anomalies in gigi.

2012-02-17  Robert Dewar  <dewar@adacore.com>

	* sem_dim.adb, sem_dim.ads, s-tasren.adb, prj.adb, prj.ads, freeze.adb,
	sem_res.adb, exp_ch4.adb, sinput.adb, sinput.ads, exp_aggr.adb,
	exp_intr.adb, s-os_lib.adb: Minor reformatting.

2012-02-17  Ed Schonberg  <schonberg@adacore.com>

	* sem_ch6.adb (Is_Non_Overriding_Operation): Add warning if the
	old operation is abstract, the relevant type is not abstract,
	and the new subprogram fails to override.

2012-02-15  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc-interface/trans.c (Identifier_to_gnu): Move block retrieving the
	type of the result to the end and execute it for a deferred constant of
	a discriminated type whose full view can be elaborated statically.

2012-02-15  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc-interface/trans.c (gnat_to_gnu) <N_Qualified_Expression>: If the
	type is tagged, mark it as used for debugging purposes.
	<N_Allocator>: Likewise for a qualified expression.

2012-02-15  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc-interface/trans.c (call_to_gnu): Create the temporary for the
	return value in the by-reference return type case if this isn't the
	expression of an object declaration.  Tidy up.

2012-02-09  Tristan Gingold  <gingold@adacore.com>

	* gcc-interface/Makefile.in: Remove .sym rule (not used).
	Remove adamsg.o object (requires native message compiler).
	* init.c (CMA$_EXIT_THREAD, MTH$_FLOOVEMAT, SS$_INTDIV): Define as a
	macro instead of as extern int.
	(ADA$_ALREADY_OPEN, ADA$_CONSTRAINT_ERRO, ADA$_DATA_ERROR)
	(ADA$_DEVICE_ERROR, ADA$_END_ERROR, ADA$_FAC_MODE_MISMAT)
	(ADA$_IOSYSFAILED, ADA$_KEYSIZERR, ADA$_KEY_MISMATCH)
	(ADA$_LAYOUT_ERROR, ADA$_LINEXCMRS, ADA$_MAXLINEXC)
	(ADA$_MODE_ERROR, ADA$_MRN_MISMATCH, ADA$_MRS_MISMATCH)
	(ADA$_NAME_ERROR, ADA$_NOT_OPEN, ADA$_ORG_MISMATCH)
	(ADA$_PROGRAM_ERROR, ADA$_RAT_MISMATCH, ADA$_RFM_MISMATCH)
	(ADA$_STAOVF, ADA$_STATUS_ERROR, ADA$_STORAGE_ERROR)
	(ADA$_UNSUPPORTED, ADA$_USE_ERROR): Likewise.
	(struct cond_except): Field cond is now an unsigned int.
	(dec_ada_cond_except_table): Adjust.
	(cond_except_table): Likewise.
	(cond_resignal_table): Likewise.
	(__gnat_default_resignal_p): Fix style.

2012-02-08  Vincent Celier  <celier@adacore.com>

	* gcc-interface/Make-lang.in: Add g-byorma.o to gnatbind objects
	(g-buorma is now imported by sinput).
	Update dependencies.
	* scn.adb (Initialize_Scanner): Call Check_For_BOM
	* sinput-p.adb (Source_File_Is_Subunit): Call Check_For_BOM
	* sinput.adb: New procedure Check_For_BOM
	* sinput.ads: New procedure Check_For_BOM

2012-02-08  Vincent Pucci  <pucci@adacore.com>

	* impunit.adb: Dimension package names updated
	* Makefile.rtl: s-dim added
	* sem_dim.adb (Is_Procedure_Put_Call): minor changes
	(Is_Dim_IO_Package_Instantiation): minor changes
	* sem_dim.ads: minor changes in comments
	* snames.ads-tmpl: Name_Dim added Name_Dim_Float_IO and
	Name_Dim_Integer_IO removed
	* s-dim.ads: New package. Define the dimension terminology.
	* s-diflio.adb, s-diinio.adb, s-dimkio.ads, s-dimmks.ads,
	* s-dmotpr.ads: Package names updated.
	* s-diflio.ads, s-diinio.ads: Documentation added and package
	names updated.

2012-02-08  Gary Dismukes  <dismukes@adacore.com>

	* gcc-interface/utils2.c (build_call_alloc_dealloc_proc): Revise test
	for storage pools to test for an underlying record type rather than
	testing Is_Tagged_Type, so that simple storage pools will be handled
	the same as normal Ada storage pools.

2012-02-08  Yannick Moy  <moy@adacore.com>

	* gnat_rm.texi: Minor reshuffling to place restriction at
	appropriate place.

2012-02-08  Bob Duff  <duff@adacore.com>

	* warnsw.adb (Set_Warning_Switch): Set Warn_On_Suspicious_Modulus_Value
	False for '-gnatwA', to suppress these warnings.

2012-02-08  Vincent Celier  <celier@adacore.com>

	* sinput-p.adb (Source_File_Is_Subunit): Check for BOM before
	starting to scan, so that UTF8 encoding is taken into account.

2012-02-08  Arnaud Charlet  <charlet@adacore.com>

	* s-tasren.adb, s-tasren.ads (Internal_Complete_Rendezvous): New
	function.
	(Complete_Rendezvous): Now call Internal_Complete_Rendezvous.
	(Exceptional_Complete_Rendezvous): Mark No_Return.

2012-02-08  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_aggr.adb (Compile_Time_Known_Composite_Value):
	New predicate to compute whether a composite value can be
	evaluated at compile time.
	(Component_Not_OK_For_Backend): Use Compile_Time_Known_Value for all
	expressions of elementary type and Compile_Time_Known_Composite_Value
	for all other expressions.
	(Expand_Record_Aggregate): Convert to assignments in the case
	of a type with mutable components if the aggregate cannot be
	built statically.

2012-02-08  Gary Dismukes  <dismukes@adacore.com>

	* aspects.ads (type Aspect_Id): Add Simple_Storage_Pool_Type.
	(Impl_Defined_Aspects): Add association for
	Aspect_Simple_Storage_Pool_Type.
	(Aspect_Names): Add
	association for Aspect_Simple_Storage_Pool_Type.
	* aspects.adb:
	(Canonical_Aspect): Add association for Simple_Storage_Pool_Type.
	* exp_attr.adb (Expand_N_Attribute_Reference):
	Change name to Name_Simple_Storage_Pool_Type.
	* exp_ch4.adb (Expand_N_Allocator): Change
	name to Name_Simple_Storage_Pool_Type.
	* exp_intr.adb (Expand_Unc_Deallocation): Change name to
	Name_Simple_Storage_Pool_Type.	* freeze.adb (Freeze_Entity):
	Change names to Name_Simple_Storage_Pool_Type.	* par-prag.adb:
	Change names to Name_Simple_Storage_Pool_Type.	* sem_attr.adb:
	(Analyze_Attribute): Change name to Name_Simple_Storage_Pool_Type.
	* sem_ch13.adb (Analyze_Attribute_Definition_Clause):
	Change name to Name_Simple_Storage_Pool_Type.
	* sem_prag.adb:
	(Analyze_Pragma): Change name to Name_Simple_Storage_Pool_Type.
	(Sig_Flags): Change name to Name_Simple_Storage_Pool_Type.
	* sem_res.adb (Resolve_Allocator): Change name to
	Name_Simple_Storage_Pool_Type.	* snames.ads-tmpl:
	(Name_Simple_Storage_Pool_Type): New name constant.
	(type Pragma_Id): Change name to Name_Simple_Storage_Pool_Type and
	move to main pragma section because it no longer matches the
	attribute name.
	* snames.adb-tmpl (Get_Pragma_Id): Remove test for
	Name_Simple_Storage_Pool.
	(Is_Pragma_Name): Remove test for Name_Simple_Storage_Pool.

2012-02-08  Robert Dewar  <dewar@adacore.com>

	* gnat_ugn.texi: Add some clarification to -gnatwA and -gnatws.

2012-02-08  Pascal Obry  <obry@adacore.com>

	* prj.adb (Compute_All_Imported_Projects): Use new
	For_Project_And_Aggregated_Context to ensure proper context is
	used for encapsulated aggregate libraries.
	* prj-proc.adb (Recursive_Process): Call
	Process_Aggregated_Projects earlier to ensure that all dependent
	projects are set with the proper encapsulated status.

2012-02-08  Pascal Obry  <obry@adacore.com>

	* s-os_lib.adb (Normalize_Arguments): Properly escape last \ in null
	terminated string.

2012-02-08  Pascal Obry  <obry@adacore.com>

	* prj.ads, prj.adb (For_Project_And_Aggregated_Context): New
	generic routine with a context parameter.

2012-02-08  Robert Dewar  <dewar@adacore.com>

	* a-coinve.adb, sem_util.adb, sem_ch8.adb, a-cobove.adb,
	a-convec.adb: Minor reformatting and code reorganization.

2012-02-08  Steve Baird  <baird@adacore.com>

	* sem_cat.adb (In_Preelaborated_Unit): A child
	unit instantiation does not inherit preelaboration requirements
	from its parent.

2012-02-08  Gary Dismukes  <dismukes@adacore.com>

	* aspects.ads (type Aspect_Id): Add Aspect_Simple_Storage_Pool.
	(Impl_Defined_Aspects): Add entry for Aspect_Simple_Storage_Pool.
	(Aspect_Argument): Add Name entry for Aspect_Simple_Storage_Pool.
	(Aspect_Names): Add entry for Aspect_Simple_Storage_Pool.
	* aspects.adb (Canonical_Aspect): Add entry for
	Aspect_Simple_Storage_Pool.
	* exp_attr.adb (Expand_N_Attribute_Reference): Handle case of
	Attribute_Simple_Storage_Pool in the same way as Storage_Pool
	(add conversion, analyze/resolve). For the Storage_Size attribute,
	for the simple pool case, locate and use the simple pool type's
	Storage_Size function (if any), otherwise evaluate to zero.
	* exp_ch4.adb (Expand_N_Allocator): In the case of an allocator
	for an access type with an associated simple storage pool,
	locate and use the pool type's Allocate.
	* exp_intr.adb (Expand_Unc_Deallocation): In the case where the
	access type has a simple storage pool, locate the pool type's
	Deallocate procedure (if present) and use it as the procedure
	to call on the Free operation.
	* freeze.adb (Freeze_Entity): In the case of a full type for
	a private type defined with pragma Simple_Storage_Pool, check
	that the full type is also appropriate for the pragma. For
	a simple storage pool type, validate that the operations
	Allocate, Deallocate (if present), and Storage_Size
	(if present) are defined with appropriate expected profiles.
	(Validate_Simple_Pool_Op_Formal): New procedure
	(Validate_Simple_Pool_Operation): New procedure Add with and
	use of Rtsfind.
	* par-prag.adb: Add Pragma_Simple_Storage_Pool to case statement
	(no action required).
	* sem_attr.adb (Analyze_Attribute): For the case of the
	Storage_Pool attribute, give a warning if the prefix type has an
	associated simple storage pool, and rewrite the attribute as a
	raise of Program_Error. In the case of the Simple_Storage_Pool
	attribute, check that the prefix type has an associated simple
	storage pool, and set the attribute type to the pool's type.
	* sem_ch13.adb (Analyze_Aspect_Specifications): Add
	Aspect_Simple_Storage_Pool case choice.
	(Analyze_Attribute_Definition_Clause): Add
	Aspect_Simple_Storage_Pool to case for Ignore_Rep_Clauses
	(no action). Add handling for Simple_Storage_Pool attribute
	definition, requiring the name to denote a simple storage pool
	object.
	(Check_Aspect_At_Freeze_Point): For a simple storage pool
	aspect, set the type to that of the name specified for the aspect.
	* sem_prag.adb (Analyze_Pragma): Add handling for pragma
	Simple_Storage_Pool, requiring that it applies to a library-level
	type declared in a package declaration that is a limited private
	or limited record type.
	* sem_res.adb (Resolve_Allocator): Flag an attempt to call a
	build-in-place function in an allocator for an access type with
	a simple storage pool as unsupported.
	* snames.ads-tmpl: Add Name_Simple_Storage_Pool.
	(type Attribute_Id): Add Attribute_Simple_Storage_Pool.
	(type Pragma_Id): Add Pragma_Simple_Storage_Pool.
	* snames.adb-tmpl (Get_Pragma_Id): Handle case of
	Name_Simple_Storage_Pool.
	(Is_Pragma_Name): Return True for Name_Simple_Storage_Pool.

2012-02-08  Cyrille Comar  <comar@adacore.com>

	* projects.texi: Clarify doc for interfaces.

2012-02-07  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc-interface/Make-lang.in (GCC_LINKERFLAGS): New variable.
	(GCC_LINK): Use it.

2012-02-01  Tristan Gingold  <gingold@adacore.com>

	* gcc-interface/trans.c (Loop_Statement_to_gnu): Use sizetype
	instead of size_type_node.

2012-01-30  Nicolas Roche  <roche@adacore.com>

	* gcc-interface/Make-lang.in: Update dependencies.
	* gcc-interface/Makefile.in: Use system-vxworks-system-ppc-mils.ads
	when needed.
	Remove Linker_Options -crtbe when building sjlj run-time.

2012-01-30  Robert Dewar  <dewar@adacore.com>

	* sem.adb (Analyze): Call Analyze_Mod for N_Op_Mod mode.
	* sem_ch3.adb (Modular_Type_Declaration): Warn on mod value of
	form 2 * small-literal.
	* sem_ch4.adb (Analyze_Mod): New procedure (warn on suspicious
	mod value).
	* sem_ch4.ads (Analyze_Mod): New procedure.

2012-01-30  Ed Schonberg  <schonberg@adacore.com>

	* sem_ch6.adb: sem_ch6.adb (Analyze_Expression_Function): Copy
	types and return expression when building spec for implicit
	body, to preserve global references that may be present in an
	instantiation.

2012-01-30  Matthew Heaney  <heaney@adacore.com>

	* a-convec.adb, a-coinve.adb, a-cobove.adb (Sort,
	Reverse_Elements): Check for cursor tampering.

2012-01-30  Ed Schonberg  <schonberg@adacore.com>

	* sem_util.adb (Is_Fully_Initialized_Type): In Ada 2012, a
	type with aspect Default_Value or Default_Component_Value is
	fully initialized, and use of variables of such types do not
	generate warnings.

2012-01-30  Javier Miranda  <miranda@adacore.com>

PR ada/15846
	* sem_ch8.adb (Analyze_Subprogram_Renaming):
	Handle self-renaming when the renamed entity is referenced using
	its expanded name.

2012-01-30  Vincent Celier  <celier@adacore.com>

	* projects.texi: Add documentation for attribute Interfaces.

2012-01-30  Hristian Kirtchev  <kirtchev@adacore.com>

	* exp_ch7.adb (Build_Finalizer_Call): Set loc again.
	* exp_ch11.adb (Expand_At_End_Handler): Do not provide a source
	location for the wrapped call to the original AT_END routine
	and the subsequent return statement.

2012-01-30  Pascal Obry  <obry@adacore.com>

	* s-rannum.adb: Minor reformatting.

2012-01-30  Hristian Kirtchev  <kirtchev@adacore.com>

	* a-calend-vms.adb, a-calend.adb: Increment the number of leap seconds
	to 25 and add the hard time value for 2012-06-30.

2012-01-30  Robert Dewar  <dewar@adacore.com>

	* a-strhas.ads, einfo.adb, einfo.ads, exp_ch7.adb, exp_ch9.adb,
	freeze.adb, prj.adb, prj.ads, prj-nmsc.adb, prj-proc.adb, s-llflex.ads,
	s-ransee.adb, s-ransee.ads, sem_ch13.adb, sem_dim.adb, sem_prag.adb:
	Minor reformatting/code reorganization.

2012-01-30  Thomas Quinot  <quinot@adacore.com>

	* s-rannum.adb, s-ransee.adb, s-ransee.ads (Get_Seed): Return
	Unsigned_64 rather than Duration.
	(System.Random_Numbers.Reset): Use full value of seed
	(do not truncate sub-second bits).

2012-01-30  Thomas Quinot  <quinot@adacore.com>

	* sem_cat.adb, sem_ch12.adb: Minor reformatting.

2012-01-30  Yannick Moy  <moy@adacore.com>

	* gnat_ugn.texi: Minor correction of GNAT UG, to take into
	account changes to -gnatwa and more recent warnings.

2012-01-30  Hristian Kirtchev  <kirtchev@adacore.com>

	* exp_ch7.adb (Build_Finalizer_Call): Do not provide a source
	location when creating a call to a finalizer.
	* exp_ch11.adb (Expand_Exception_Handlers): Do not provide
	a source location for the first actual of Save_Occurrence for
	consistency sake.

2012-01-30  Ed Schonberg  <schonberg@adacore.com>

	* einfo.ads, einfo,adb: New attribute on scalar types:
	Default_Aspect_Value New attribute on  array types:
	Default_Aspect_Component_Value Move attribute Related_Array_Object
	to a different position to accomodate new aspect attributes.
	* freeze.adb (Freeze_Entity): Use new attributes to retrieve value
	of defaults set with an aspect specification, rather than using
	the list of aspects attached to the type, to prevent issues with
	partial views.
	* sem_ch13.adb (Analyze_Aspect_Specifications): For aspects
	Default_Value and Default_Component _Value, store corresponding
	expression in type entity.
	(Check_Aspect_At_End_Of_Declaration): If the default aspects
	are declared on the full view, use the full view to resolve the
	correseponding expression.
	* exp_ch3.adb (Init_Component): Use attribute
	Default_Aspect_Component_Value to perform default initialization,
	rather than relying on the rep item list for the type.
	(Get_Simple_Init_Val): Ditto.

2012-01-30  Thomas Quinot  <quinot@adacore.com>

	* a-strhas.ads: Document risk of collision attack.

2012-01-30  Yannick Moy  <moy@adacore.com>

	* gnat_ugn.texi: Minor update wrt warning switches.

2012-01-30  Vincent Celier  <celier@adacore.com>

	* prj-nmsc.adb (Check_Interfaces): Report an error when a
	unit from Library_Interface is not a unit of the project.

2012-01-30  Vincent Pucci  <pucci@adacore.com>

	* sem_prag.adb (Make_Aspect_For_PPC_In_Gen_Sub_Decl): Parent
	links fixed inside PPC pragmas.
	* sem_ch12.adb: Move call to Make_Aspect_For_PPC_In_Gen_Sub_Decl.

2012-01-30  Thomas Quinot  <quinot@adacore.com>

	* s-ransee.ads: Minor reformatting.

2012-01-30  Pascal Obry  <obry@adacore.com>

	* prj.ads, prj.adb (For_Each_Source): Add support for skipping
	sources coming from an encapsulated library.

2012-01-30  Ed Schonberg  <schonberg@adacore.com>

	* sem_ch3.adb (Process-Full_View): fix typo.
	* sem_ch13.adb (Aalyze_Aspect_Specifications): if predicates
	appear on a private type and the full view is available, ensure
	existence of freeze node for full view.
	(Build_Predicate_Function): Attach predicate function to both
	views of a private type.

2012-01-30  Vincent Celier  <celier@adacore.com>

	* prj-nmsc.adb (Check_Interfaces): Compute the Lib_Interface_ALIs
	for the project if either attribute Library_Interface or
	Interfaces is declared.
	(Check_Stand_Alone_Library): Use Lib_Interface_ALIs computed in
	Check_Interfaces.

2012-01-30  Pascal Obry  <obry@adacore.com>

	* prj-proc.adb (Recursive_Process): Set From_Encapsulated_Lib
	boolean value to true in the process list created by this routine.
	* prj.ads (Project_List_Element): New field From_Encapsulated_Lib.
	Continued work for KA06-021.
	* prj.adb (Compute_All_Imported_Projects): Set
	From_Encapsulated_Lib boolean flag.

2012-01-30  Vincent Pucci  <pucci@adacore.com>

	* sem_dim.adb (Expand_Put_Call_With_Dimension_Symbol): Minor
	code clean up.
	* s-diflio.ads: Minor change.

2012-01-30  Javier Miranda  <miranda@adacore.com>

	* exp_ch9.adb (Build_Dispatching_Requeue): Add missing call
	to Get_Entry_Index.  Required to generate code which provides
	the correct value of Entry_Index in the target entry.

2012-01-30  Nicolas Roche  <roche@adacore.com>

	* system-vxworks-ppc.ads: Add pragma Linker_Options -crtbe to
	fix issue with zcx on VxWorks5.

2012-01-30  Pascal Obry  <obry@adacore.com>

	* prj.ads, prj.adb (For_Every_Project_Imported): Remove
	In_Aggregate_Lib.
	(For_Every_Project_Imported_Context): New generic routine with
	a context parameter.
	* prj-nmsc.adb: Revert to use For_Every_Project_Imported Avoid
	distributed complexity.
	* prj-env.adb, prj-conf.adb, makeutl.adb, gnatcmd.adb: Ditto.

2012-01-30  Thomas Quinot  <quinot@adacore.com>

	* exp_aggr.adb (Expand_Record_Aggregate): After creating the
	_parent aggregate for an extension aggregate, check whether it
	requires delayed (top-down) expansion.

2012-01-30  Vincent Pucci  <pucci@adacore.com>

	* sem_dim.adb (Expand_Put_Call_With_Dimension_Symbol): Rewritten.
	* snames.ads-tmpl: Name_Item and Name_Symbols added.
	* s-diflio.adb, s-diflio.ads, s-diinio.adb, s-diinio.ads: Rename
	and change the position of parameter Symbols in every Put routine.
	* s-dimmks.ads: Convert long float type Mks_Type into long
	long float.
	* s-llflex.ads: Modifications in comments.

2012-01-30  Hristian Kirtchev  <kirtchev@adacore.com>

	* sem_ch12.adb (Earlier): Do not use the
	top level source locations of the two input nodes.

2012-01-30  Robert Dewar  <dewar@adacore.com>

	* einfo.ads, sem_prag.adb, sem_attr.adb, aspects.ads,
	sem_cat.adb, sem_aggr.adb, exp_aggr.adb: Minor reformatting.

2012-01-30  Robert Dewar  <dewar@adacore.com>

	* a-cdlili.adb, a-cidlli.adb, a-cbdlli.adb: Minor reformatting.

2012-01-30  Olivier Hainque  <hainque@adacore.com>

	* sigtramp-ppcvxw.c (CFI_COMMON_REGS): Add rule for r1 back +
	comments.

2012-01-30  Thomas Quinot  <quinot@adacore.com>

	* gnat_rm.texi, sem_dist.adb, sem_dist.ads, einfo.ads, sem_prag.adb,
	sem_ch12.adb, sem_attr.adb, aspects.adb, aspects.ads, par-prag.adb,
	sem_cat.adb, snames.ads-tmpl (Sem_Dist.Is_Valid_Remote_Object_Type):
	New subprogram (extracted from
	Sem_Cat.Validate_Remote_Access_Object_Type_Declaration).
	(Einfo.Is_Remote_Types): Now applies to generic types. Update
	documentation accordingly.
	(Sem_Ch12.Analyze_Associations): A RACW type is acceptable as
	actual for a formal type to which a pragma Remote_Access_Type
	applies.
	(Aspects, Par.Prag, Sem_Prag): Support for new pramga/aspect
	Remote_Access_Type.
	(Sem_Attr.Analyze_Attribute, case Stub_Type): Attribute can
	be applied to a generic type if pragma Remote_Access_Type
	applies, in which case the type of the attribute is
	System.Partition_Interface.RACW_Stub_Type.

2012-01-27  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Procedure>: Do not set
	an alignment on fields of the RETURN type built for the CICO mechanism.

2012-01-27  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc-interface/trans.c (gnat_to_gnu): Avoid making a SAVE_EXPR for
	a call to a function that returns an unconstrained type with default
	discriminant.  Similarly, avoid doing the conversion to the nominal
	result type in this case.

2012-01-27  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc-interface/ada-tree.h (DECL_ALIASED_P): New flag.
	* gcc-interface/decl.c (is_variable_size): Rename to...
	(type_has_variable_size): ...this.
	(adjust_packed): Adjust to above renaming.
	(gnat_to_gnu_field): Set DECL_ALIASED_P on the field.
	(field_is_artificial): New predicate.
	(field_is_aliased): Likewise.
	(field_has_self_size): Likewise.
	(field_has_variable_size): Likewise.
	(components_to_record): Record information for the final layout during
	the first pass on fields.
	If there is an aliased field placed after a field whose length depends
	on discriminants, put all the fields of the latter sort, last.

2012-01-27  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc-interface/gigi.h (get_minimal_subprog_decl): Declare.
	* gcc-interface/decl.c (get_minimal_subprog_decl): New function.
	* gcc-interface/trans.c (Attribute_to_gnu): Use it for the prefix of an
	Access-like attribute in a dispatch table if the subprogram is public.

2012-01-27  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc-interface/gigi.h (create_label_decl): Adjust.
	* gcc-interface/utils.c (create_label_decl): Add GNAT_NODE parameter
	and invoke gnat_pushdecl on it.  Remove obsolete settings.
	* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Label>: Adjust call to
	create_label_decl.
	* gcc-interface/trans.c (gnat_to_gnu) <N_Null): Likewise.  Ignore the
	label for debugging purposes.

2012-01-27  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc-interface/decl.c (gnat_to_gnu_entity) <object>: For an aliased
	object with an unconstrained nominal subtype and if optimization isn't
	enabled, create a special VAR_DECL for debugging purposes.

2012-01-23  Robert Dewar  <dewar@adacore.com>

	* sem_prag.ads, sem_prag.adb: Minor reformatting.

2012-01-23  Robert Dewar  <dewar@adacore.com>

	* sem_ch13.adb (Analyze_Aspect_Specifications): Check for
	language defined aspect applied to renaming or formal type
	declaration (not permitted)

2012-01-23  Matthew Heaney  <heaney@adacore.com>

	* a-cdlili.adb, a-cidlli.adb, a-cbdlli.adb (Vet): Replaced
	comment with pragma Assert.

2012-01-23  Vincent Pucci  <pucci@adacore.com>

	* sem_ch12.adb (Analyze_Generic_Subprogram_Declaration): Call
	to Make_Aspect_For_PPC_In_Gen_Sub_Decl added in ASIS mode.
	* sem_prag.adb, sem_prag.ads (Make_Aspect_For_PPC_In_Gen_Sub_Decl): New
	routine. In ASIS mode, convert any PPC pragmas into aspects in generic
	subprogram declaration in order to enable the analysis of PPC boolean
	expressions.

2012-01-23  Robert Dewar  <dewar@adacore.com>

	* sem_ch3.adb (Analyze_Object_Declaration): Properly
	handle Current_Value for volatile variables (also propagate
	Treat_As_Volatile from type to object).

2012-01-23  Hristian Kirtchev  <kirtchev@adacore.com>

	* sem_ch12.adb (Install_Body): Detect the case
	where the enclosing context is a package with a stub body that
	has already been replaced by the actual body. In such cases,
	the freeze node for the enclosing context must be inserted after
	the real body.

2012-01-23  Ed Schonberg  <schonberg@adacore.com>

	* sem_prag.adb (Analyze_Pragma, case Debug): Freeze the called
	subprogram before expanding the pragma into an if-statement with
	a block, to ensure that when the subprogram is null its body is
	properly generated before expansion.

2012-01-23  Hristian Kirtchev  <kirtchev@adacore.com>

	* sem_ch12.adb (Analyze_Associations): Alphabetize local variables and
	constants. Rename Actual_Types to Actuals_To_Freeze. Rename Next_Formal
	to Saved_Formal.
	Freeze all eligible subprograms which appear as actuals in
	the instantiation.
	(Has_Fully_Defined_Profile): New routine.
	(Renames_Standard_Subprogram): New routine.
	(Earlier): Add local variable N. Comment update. Do not use source
	locations when trying to determine whether one node precedes another.

2012-01-23  Gary Dismukes  <dismukes@adacore.com>

	* exp_ch4.adb (Expand_Concatenate): In the case
	where the result of a concatentation can be null, set the to
	result have both the low and high bounds of the right operand (not
	just the high bound, as was the case prior to this fix). Also,
	fix the saved high bound setting (Last_Opnd_High_Bound) in the
	empty string literal case (should have been low bound minus one,
	rather than plus one).

2012-01-23  Thomas Quinot  <quinot@adacore.com>

	* scos.ads, put_scos.adb, get_scos.adb (Get_SCOs, Put_SCOs): Do not
	omit statement SCOs for disabled pragmas.

2012-01-23  Matthew Heaney  <heaney@adacore.com>

	* a-cohase.ads, a-cihase.ads, a-cbhase.ads, a-coorse.ads,
	a-ciorse.ads, a-cborse.ads, a-cohama.ads, a-cihama.ads, a-cbhama.ads,
	a-coorma.ads, a-ciorma.ads, a-cborma.ads, a-cdlili.ads, a-cidlli.ads,
	a-cbdlli.ads, a-convec.ads, a-coinve.ads, a-cobove.ads (Cursor'Read,
	Cursor'Write): Declare in private part.
	(Reference_Type'Read, Reference_Type'Write): Ditto.
	(Constant_Reference_Type'Read, Constant_Reference_Type'Write): Ditto.

2012-01-23  Robert Dewar  <dewar@adacore.com>

	* a-catizo.ads, a-calend.adb, a-calend.ads, par-ch13.adb: Minor
	reformatting.

2012-01-23  Ed Schonberg  <schonberg@adacore.com>

	* sem_ch6.adb (Analyze_Subprogram_Declaration): Do not set the
	Corresponding_Body on a defaulted null formal subprogram.
	* sem_ch12.adb (Check_Formal_Package_Instance): No check needed
	on a defaulted formal subprogram that is a null procedure.

2012-01-23  Hristian Kirtchev  <kirtchev@adacore.com>

	* exp_ch9.adb: Update the comments involving pragma Implemented.
	* sem_ch3.adb (Check_Pragma_Implemented (Entity_Id)): Add local
	constant Subp_Alias and local variable Impl_Subp. Properly
	handle aliases of synchronized wrappers. Code cleanup.
	(Check_Pragma_Implemented (Entity_Id; Entity_Id)): Add
	Name_Optional as part of the condition.
	* sem_prag.adb (Analyze_Pragma): Add "Optional" as one of the
	valid choices of implementation kind.
	(Check_Arg_Is_One_Of): New routine.
	* snames.ads-tmlp: Add Name_Optional.

2012-01-23  Ed Schonberg  <schonberg@adacore.com>

	* par-ch13.adb: Better error recovery in illegal aspect
	specification.

2012-01-23  Hristian Kirtchev  <kirtchev@adacore.com>

	* a-calend.adb: Add with clause for Interfaces.C. Add constant
	Unix_Max.
	(Day_Of_Week): Call the internal UTC_Time_Offset.
	(Split): Call the internal UTC_Time_Offset.
	(Time_Of): Call the internal UTC_Time_Offset.
	(Time_Zone_Operations.UTC_Time_Offset): Call internal UTC_Time_Offset.
	(UTC_Time_Offset): New library-level routine.
	* a-calend.ads (UTC_Time_Offset): Remove parameter
	Is_Historic. Update related comment on usage.
	* a-catizo.adb (UTC_Time_Offset): Removed.
	(UTC_Time_Offset (Time)): Call Time_Zone_Operations.UTC_Time_Offset.
	* a-caltizo.ads (UTC_Time_Offset): Removed.
	(UTC_Time_Offset (Time)): Add back the default expression of parameter
	Date.

2012-01-23  Robert Dewar  <dewar@adacore.com>

	* sprint.ads, sprint.adb (Sprint_Node_List): Add New_Lines parameter
	(pg,po,ps): Make sure each entry starts on new line.

2012-01-23  Hristian Kirtchev  <kirtchev@adacore.com>

	* a-calend.ads, a-calend.adb: Define types int and int_Pointer. Update
	the parameter profile of procedure localtime_tzoff and its associated
	comment.
	(Day_Of_Week): Do not treat the input date as historical
	with respect to time zones.
	(Split): Do not treat the input
	date as historical with respect to time zones.	(Time_Of): Do
	not treat the input constituents as forming a historical date
	with respect to time zones.
	(UTC_Time_Offset): Add new formal
	parameter Is_Historic. Add local variable Flag. Update the call
	to localtime_tzoff.
	* a-catizo.ads, a-catizo.adb (UTC_Time_Offset): New routine.
	(UTC_Time_Offset (Time)): Update the call to
	Time_Zone_Operations.UTC_Time_Offset.
	* sysdep.c (__gnat_localtime_tzoff): Update parameter
	profile. Split the processing of offsets on Windows into two - one
	part of historic time stamps and the other for the current time.

2012-01-23  Robert Dewar  <dewar@adacore.com>

	* a-calend.adb: Minor reformatting.

2012-01-23  Ed Schonberg  <schonberg@adacore.com>

	* exp_ch9.adb, sem_ch9.adb: Handle array of access to synchronized
	interface in requeue statement.

2012-01-23  Cyrille Comar  <comar@adacore.com>

	* projects.texi: Remove references to main units and replace
	with references to main programs to be coherent with the
	documentation.

2012-01-23  Robert Dewar  <dewar@adacore.com>

	* s-utf_32.adb: Minor reformatting.

2012-01-23  Vincent Celier  <celier@adacore.com>

	* snames.ads-tmpl: Minor comment addition Indicate that
	Name_Library_Encapsulated_Options is only used in gprbuild.

2012-01-23  Robert Dewar  <dewar@adacore.com>

	* sem_ch10.adb (Analyze_Subunit): Properly save/restore cunit
	restrictions.

2012-01-23  Ed Schonberg  <schonberg@adacore.com>

	* snames.ads-tmpl: Add Name_Synchronization.
	* aspects.ads, aspects.adb: Add Aspect_Synchronization to
	enumeration type and related maps.
	* sem_ch13.adb (Analyze_Aspect_Specifications): Handle Aspect
	Synchronization, build corresponding pragma Implemented.
	* sem_util.adb (Implementation_Kind): Handle both explicit and
	implicit pragma_argument association to retrieve the given
	synchronization mode.

2012-01-23  Robert Dewar  <dewar@adacore.com>

	* sem_ch10.adb, errout.adb: Minor reformatting.

2012-01-23  Ed Schonberg  <schonberg@adacore.com>

	* sem_res.adb (Resolve_Actuals): An actual in a call to an
	Ada 2012 Reference function does not lead to a dangerous order
	dependence.

2012-01-23  Gary Dismukes  <dismukes@adacore.com>

	* exp_util.adb (Is_Iterated_Container): Test
	Is_Entity_Name when searching for calls to the default iterator,
	to avoid blowing up on indirect calls which have an explicit
	dereference as the call name.

2012-01-23  Thomas Quinot  <quinot@adacore.com>

	* errout.adb (Set_Msg_Node): For an N_Expanded_Name, output
	the complete expanded name, rather than just its Selector_Name.

2012-01-23  Thomas Quinot  <quinot@adacore.com>

	* a-textio.adb (Put): Rewrite one-parameter Character version to
	just call the two-parameter one with Current_Out.

2012-01-23  Hristian Kirtchev  <kirtchev@adacore.com>

	* freeze.adb (Check_Current_Instance): Issue an
	error when the prefix of 'Unchecked_Access or 'Access does not
	denote a legal aliased view of a type.
	(Freeze_Record_Type): Do not halt the processing of record components
	once the Has_Controlled_Component is set as this bypasses the remaining
	checks.
	(Is_Aliased_View_Of_Type): New routine.

2012-01-23  Thomas Quinot  <quinot@adacore.com>

	* errout.ads, freeze.adb: Minor reformatting.

2012-01-23  Thomas Quinot  <quinot@adacore.com>

	* sem_ch10.adb, sem_prag.adb: Remove redundant apostrophes in error
	messages.

2012-01-23  Olivier Hainque  <hainque@adacore.com>

	* adadecode.c (__gnat_decode): Deal with empty input early,
	preventing potential erroneous memory access later on.

2012-01-21  Eric Botcazou  <ebotcazou@adacore.com>

	PR ada/46192
	* gcc-interface/decl.c (gnat_to_gnu_entity) <object>: In the case of a
	renaming, preserve the volatileness through the indirection, if any.

2012-01-14  Andreas Schwab  <schwab@linux-m68k.org>

	* gcc-interface/Makefile.in (OSCONS_EXTRACT): Add
	$(GNATLIBCFLAGS).

2012-01-10  Pascal Obry  <obry@adacore.com>

	* prj-nmsc.adb (Check_Library_Attributes):
	Kill check for object/source directories for aggregate libraries.

2012-01-10  Matthew Heaney  <heaney@adacore.com>

	* a-cdlili.adb, a-cdlili.ads, a-cihama.adb, a-cihama.ads, a-coinve.adb,
	a-coinve.ads, a-ciorse.adb, a-ciorse.ads, a-coorma.adb, a-coorma.ads,
	a-cborma.adb, a-cborma.ads, a-cidlli.adb, a-cidlli.ads, a-cimutr.adb,
	a-cimutr.ads, a-cihase.adb, a-cihase.ads, a-cohama.adb, a-cohama.ads,
	a-coorse.adb, a-coorse.ads, a-cbhama.adb, a-cbhama.ads, a-cborse.adb,
	a-cborse.ads, a-comutr.adb, a-comutr.ads, a-ciorma.adb, a-cobove.adb,
	a-ciorma.ads, a-cobove.ads, a-convec.adb, a-convec.ads, a-cohase.adb,
	a-cohase.ads, a-cbdlli.adb, a-cbdlli.ads, a-cbmutr.adb, a-cbmutr.ads,
	a-cbhase.adb, a-cbhase.ads (Reference, Constant_Reference): Declare
	container parameter as aliased in/in out.
	Code clean ups.

2012-01-10  Bob Duff  <duff@adacore.com>

	* s-os_lib.ads: Improve comment.

2012-01-10  Geert Bosch  <bosch@adacore.com>

	* s-gearop.adb (Forward_Eliminate): Avoid improper aliasing
	for complex Scalar.

2012-01-10  Bob Duff  <duff@adacore.com>

	* sem_intr.adb (Check_Shift): Use RM_Size instead of Esize, when
	checking that the 'Size is correct. If the type is "mod 2**12",
	for example, it's illegal, but Esize is the 'Object_Size, which
	will be something like 16 or 32, so the error ('Size = 12) was
	not detected.
	* gnat_rm.texi: Improve documentation of shift
	and rotate intrinsics.

2012-01-10  Pascal Obry  <obry@adacore.com>

	* prj.adb (For_Every_Project_Imported): Fix
	implementation to make sure we return each project only once
	for aggragte libraries. It is fine to return a project twice for
	aggregate projects, this was the case as a Project_Id is different
	in each project tree. The new implementation use a table based on
	the project name to ensure proper detection of duplicate project
	in aggregate library. A new context is then created to continue
	retrurning duplicate project for aggregate libraries.

2012-01-09  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc-interface/trans.c (call_to_gnu): Create the temporary for the
	return value in the variable-sized return type case if the target is
	an array with fixed size.  However, do not create it if this is the
	expression of an object declaration.

2012-01-09  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc-interface/trans.c (addressable_p) <COMPONENT_REF>: Fix thinko.

2012-01-06  Robert Dewar  <dewar@adacore.com>

	* a-wichha.ads, a-wichun.ads, a-zchhan.ads, a-zchuni.ads,
	s-utf_32.ads: Add pragma Pure
	* s-utf_32.adb: Suppress warnings on non-static constants (now
	that this is Pure).

2012-01-06  Bob Duff  <duff@adacore.com>

	* s-rpc.ads (Read, Write): Add overriding indicators.

2012-01-06  Robert Dewar  <dewar@adacore.com>

	* gnat_rm.texi: Add documentation for conventions
	Ada_Pass_By_Copy and Ada_Pass_By_Reference.

2012-01-06  Gary Dismukes  <dismukes@adacore.com>

	* a-tienio.adb (Put): Add exception message on
	raise statements. Remove unneeded blocks and object declarations.

2012-01-06  Robert Dewar  <dewar@adacore.com>

	* sem_prag.adb: Minor reformatting.

2012-01-06  Ed Schonberg  <schonberg@adacore.com>

	* sinfo.ads, sinfo.adb (Has_Prefixed_Call): New flag to indicate
	that a selected component within a generic unit has been resolved
	as a prefixed call with local references.
	* sem_ch3.adb (Is_Visible_Component): In an instance body a selected
	component is always visible.
	* sem_ch4.adb (Analyze_Selected_Component): If the node is a
	prefixed call in an instance, do not look for visible components
	of the type.
	* sem_ch12.adb (Reset_Entity): If a selected component has resolved
	to a prefixed call, mark the node accordingly when prefix and
	selector are local references.

2012-01-02  Eric Botcazou  <ebotcazou@adacore.com>

	* gnatvsn.ads (Current_Year): Bump to 2012.

Copyright (C) 2012 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.
